

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Mar 24 19:45:35 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0000                     	;# 
    61     0001                     	;# 
    62     0002                     	;# 
    63     0003                     	;# 
    64     0004                     	;# 
    65     0005                     	;# 
    66     0006                     	;# 
    67     0007                     	;# 
    68     0008                     	;# 
    69     0009                     	;# 
    70     000A                     	;# 
    71     000B                     	;# 
    72     000C                     	;# 
    73     000D                     	;# 
    74     000E                     	;# 
    75     000E                     	;# 
    76     000F                     	;# 
    77     0010                     	;# 
    78     0011                     	;# 
    79     0012                     	;# 
    80     0013                     	;# 
    81     0014                     	;# 
    82     0015                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0017                     	;# 
    86     0018                     	;# 
    87     0019                     	;# 
    88     001A                     	;# 
    89     001B                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001D                     	;# 
    93     001E                     	;# 
    94     001F                     	;# 
    95     0081                     	;# 
    96     0085                     	;# 
    97     0086                     	;# 
    98     0087                     	;# 
    99     0088                     	;# 
   100     0089                     	;# 
   101     008C                     	;# 
   102     008D                     	;# 
   103     008E                     	;# 
   104     008F                     	;# 
   105     0090                     	;# 
   106     0091                     	;# 
   107     0092                     	;# 
   108     0093                     	;# 
   109     0093                     	;# 
   110     0093                     	;# 
   111     0094                     	;# 
   112     0095                     	;# 
   113     0096                     	;# 
   114     0097                     	;# 
   115     0098                     	;# 
   116     0099                     	;# 
   117     009A                     	;# 
   118     009B                     	;# 
   119     009C                     	;# 
   120     009D                     	;# 
   121     009E                     	;# 
   122     009F                     	;# 
   123     0105                     	;# 
   124     0107                     	;# 
   125     0108                     	;# 
   126     0109                     	;# 
   127     010C                     	;# 
   128     010C                     	;# 
   129     010D                     	;# 
   130     010E                     	;# 
   131     010F                     	;# 
   132     0185                     	;# 
   133     0187                     	;# 
   134     0188                     	;# 
   135     0189                     	;# 
   136     018C                     	;# 
   137     018D                     	;# 
   138     0000                     	;# 
   139     0001                     	;# 
   140     0002                     	;# 
   141     0003                     	;# 
   142     0004                     	;# 
   143     0005                     	;# 
   144     0006                     	;# 
   145     0007                     	;# 
   146     0008                     	;# 
   147     0009                     	;# 
   148     000A                     	;# 
   149     000B                     	;# 
   150     000C                     	;# 
   151     000D                     	;# 
   152     000E                     	;# 
   153     000E                     	;# 
   154     000F                     	;# 
   155     0010                     	;# 
   156     0011                     	;# 
   157     0012                     	;# 
   158     0013                     	;# 
   159     0014                     	;# 
   160     0015                     	;# 
   161     0015                     	;# 
   162     0016                     	;# 
   163     0017                     	;# 
   164     0018                     	;# 
   165     0019                     	;# 
   166     001A                     	;# 
   167     001B                     	;# 
   168     001B                     	;# 
   169     001C                     	;# 
   170     001D                     	;# 
   171     001E                     	;# 
   172     001F                     	;# 
   173     0081                     	;# 
   174     0085                     	;# 
   175     0086                     	;# 
   176     0087                     	;# 
   177     0088                     	;# 
   178     0089                     	;# 
   179     008C                     	;# 
   180     008D                     	;# 
   181     008E                     	;# 
   182     008F                     	;# 
   183     0090                     	;# 
   184     0091                     	;# 
   185     0092                     	;# 
   186     0093                     	;# 
   187     0093                     	;# 
   188     0093                     	;# 
   189     0094                     	;# 
   190     0095                     	;# 
   191     0096                     	;# 
   192     0097                     	;# 
   193     0098                     	;# 
   194     0099                     	;# 
   195     009A                     	;# 
   196     009B                     	;# 
   197     009C                     	;# 
   198     009D                     	;# 
   199     009E                     	;# 
   200     009F                     	;# 
   201     0105                     	;# 
   202     0107                     	;# 
   203     0108                     	;# 
   204     0109                     	;# 
   205     010C                     	;# 
   206     010C                     	;# 
   207     010D                     	;# 
   208     010E                     	;# 
   209     010F                     	;# 
   210     0185                     	;# 
   211     0187                     	;# 
   212     0188                     	;# 
   213     0189                     	;# 
   214     018C                     	;# 
   215     018D                     	;# 
   216                           
   217                           	psect	idataCOMMON
   218     028C                     __pidataCOMMON:
   219                           
   220                           ;initializer for _pTens
   221     028C  3428               	retlw	low (_tens| 0)
   222                           
   223                           	psect	idataBANK0
   224     028A                     __pidataBANK0:
   225                           
   226                           ;initializer for _pHundreds
   227     028A  3426               	retlw	low (_hundreds| 0)
   228                           
   229                           ;initializer for _pUnit
   230     028B  342A               	retlw	low (_unit| 0)
   231                           
   232                           	psect	strings
   233     0234                     __pstrings:
   234     0234                     stringtab:
   235     0234                     __stringtab:
   236     0234                     stringcode:	
   237                           ;	String table - string pointers are 1 byte each
   238                           
   239     0234                     stringdir:
   240     0234  3002               	movlw	high stringdir
   241     0235  008A               	movwf	10
   242     0236  0804               	movf	4,w
   243     0237  0A84               	incf	4,f
   244     0238  0782               	addwf	2,f
   245     0239                     __stringbase:
   246     0239  3400               	retlw	0
   247     023A                     __end_of__stringtab:
   248     023A                     _table_display:
   249     023A  3440               	retlw	64
   250     023B  3400               	retlw	0
   251     023C  3479               	retlw	121
   252     023D  3400               	retlw	0
   253     023E  3424               	retlw	36
   254     023F  3400               	retlw	0
   255     0240  3430               	retlw	48
   256     0241  3400               	retlw	0
   257     0242  3419               	retlw	25
   258     0243  3400               	retlw	0
   259     0244  3412               	retlw	18
   260     0245  3400               	retlw	0
   261     0246  3402               	retlw	2
   262     0247  3400               	retlw	0
   263     0248  3478               	retlw	120
   264     0249  3400               	retlw	0
   265     024A  3400               	retlw	0
   266     024B  3400               	retlw	0
   267     024C  3410               	retlw	16
   268     024D  3400               	retlw	0
   269     024E  3408               	retlw	8
   270     024F  3400               	retlw	0
   271     0250  3403               	retlw	3
   272     0251  3400               	retlw	0
   273     0252  3446               	retlw	70
   274     0253  3400               	retlw	0
   275     0254  3421               	retlw	33
   276     0255  3400               	retlw	0
   277     0256  3406               	retlw	6
   278     0257  3400               	retlw	0
   279     0258  340E               	retlw	14
   280     0259  3400               	retlw	0
   281     025A                     __end_of_table_display:
   282     000B                     _INTCONbits	set	11
   283     0001                     _TMR0	set	1
   284     0007                     _PORTC	set	7
   285     001E                     _ADRESH	set	30
   286     001F                     _ADCON0bits	set	31
   287     0008                     _PORTD	set	8
   288     0006                     _PORTB	set	6
   289     0066                     _ADIF	set	102
   290     005A                     _T0IF	set	90
   291     009F                     _ADCON1bits	set	159
   292     0085                     _TRISAbits	set	133
   293     0081                     _OPTION_REGbits	set	129
   294     008F                     _OSCCONbits	set	143
   295     0088                     _TRISD	set	136
   296     0087                     _TRISC	set	135
   297     0086                     _TRISB	set	134
   298     009E                     _ADRESL	set	158
   299     0188                     _ANSELbits	set	392
   300     0189                     _ANSELH	set	393
   301     0188                     _ANSEL	set	392
   302                           
   303                           	psect	cinit
   304     0015                     start_initialization:	
   305                           ; #config settings
   306                           
   307     0015                     __initialization:
   308                           
   309                           ; Initialize objects allocated to BANK0
   310     0015  120A  118A  228A  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   311     001A  00B6               	movwf	__pdataBANK0& (0+127)
   312     001B  120A  118A  228B  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   313     0020  00B7               	movwf	(__pdataBANK0+1)& (0+127)
   314                           
   315                           ; Initialize objects allocated to COMMON
   316     0021  120A  118A  228C  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   317     0026  00FD               	movwf	__pdataCOMMON& (0+127)
   318                           
   319                           ; Clear objects allocated to BANK0
   320     0027  01A0               	clrf	__pbssBANK0& (0+127)
   321     0028  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   322     0029  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   323     002A  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   324     002B  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   325     002C  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   326     002D  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   327     002E  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   328     002F  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   329     0030  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   330     0031  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   331     0032  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   332     0033                     end_of_initialization:	
   333                           ;End of C runtime variable initialization code
   334                           
   335     0033                     __end_of__initialization:
   336     0033  0183               	clrf	3
   337     0034  120A  118A  299A   	ljmp	_main	;jump to C main() function
   338                           
   339                           	psect	dataCOMMON
   340     007D                     __pdataCOMMON:
   341     007D                     _pTens:
   342     007D                     	ds	1
   343                           
   344                           	psect	bssBANK0
   345     0020                     __pbssBANK0:
   346     0020                     _adc2:
   347     0020                     	ds	2
   348     0022                     _adc1:
   349     0022                     	ds	2
   350     0024                     _value_display:
   351     0024                     	ds	2
   352     0026                     _hundreds:
   353     0026                     	ds	2
   354     0028                     _tens:
   355     0028                     	ds	2
   356     002A                     _unit:
   357     002A                     	ds	2
   358                           
   359                           	psect	dataBANK0
   360     0036                     __pdataBANK0:
   361     0036                     _pHundreds:
   362     0036                     	ds	1
   363     0037                     _pUnit:
   364     0037                     	ds	1
   365                           
   366                           	psect	cstackCOMMON
   367     0070                     __pcstackCOMMON:
   368     0070                     ?_table:
   369     0070                     ?_setup:	
   370                           ; 1 bytes @ 0x0
   371                           
   372     0070                     ?_isr:	
   373                           ; 1 bytes @ 0x0
   374                           
   375     0070                     ?_main:	
   376                           ; 1 bytes @ 0x0
   377                           
   378     0070                     ?___wmul:	
   379                           ; 1 bytes @ 0x0
   380                           
   381     0070                     ?___awdiv:	
   382                           ; 2 bytes @ 0x0
   383                           
   384     0070                     table@digit:	
   385                           ; 2 bytes @ 0x0
   386                           
   387     0070                     ___wmul@multiplier:	
   388                           ; 2 bytes @ 0x0
   389                           
   390     0070                     ___awdiv@divisor:	
   391                           ; 2 bytes @ 0x0
   392                           
   393                           
   394                           ; 2 bytes @ 0x0
   395     0070                     	ds	2
   396     0072                     ??_table:
   397     0072                     ___wmul@multiplicand:	
   398                           ; 1 bytes @ 0x2
   399                           
   400     0072                     ___awdiv@dividend:	
   401                           ; 2 bytes @ 0x2
   402                           
   403                           
   404                           ; 2 bytes @ 0x2
   405     0072                     	ds	2
   406     0074                     ??___wmul:
   407     0074                     ??___awdiv:	
   408                           ; 1 bytes @ 0x4
   409                           
   410     0074                     ___wmul@product:	
   411                           ; 1 bytes @ 0x4
   412                           
   413                           
   414                           ; 2 bytes @ 0x4
   415     0074                     	ds	1
   416     0075                     ___awdiv@counter:
   417                           
   418                           ; 1 bytes @ 0x5
   419     0075                     	ds	1
   420     0076                     ___awdiv@sign:
   421                           
   422                           ; 1 bytes @ 0x6
   423     0076                     	ds	1
   424     0077                     ___awdiv@quotient:
   425                           
   426                           ; 2 bytes @ 0x7
   427     0077                     	ds	2
   428     0079                     ?_getDigits:
   429     0079                     getDigits@num:	
   430                           ; 1 bytes @ 0x9
   431                           
   432                           
   433                           ; 2 bytes @ 0x9
   434     0079                     	ds	2
   435     007B                     ??_getDigits:
   436     007B                     getDigits@num2:	
   437                           ; 1 bytes @ 0xB
   438                           
   439                           
   440                           ; 2 bytes @ 0xB
   441     007B                     	ds	2
   442                           
   443                           	psect	cstackBANK0
   444     002C                     __pcstackBANK0:
   445     002C                     ??_isr:
   446                           
   447                           ; 1 bytes @ 0x0
   448     002C                     	ds	6
   449     0032                     ??_setup:
   450                           
   451                           ; 1 bytes @ 0x6
   452     0032                     	ds	2
   453     0034                     ??_main:
   454                           
   455                           ; 1 bytes @ 0x8
   456     0034                     	ds	2
   457                           
   458                           	psect	maintext
   459     019A                     __pmaintext:	
   460 ;;
   461 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   462 ;;
   463 ;; *************** function _main *****************
   464 ;; Defined at:
   465 ;;		line 84 in file "main.c"
   466 ;; Parameters:    Size  Location     Type
   467 ;;		None
   468 ;; Auto vars:     Size  Location     Type
   469 ;;		None
   470 ;; Return value:  Size  Location     Type
   471 ;;                  1    wreg      void 
   472 ;; Registers used:
   473 ;;		wreg, status,2, status,0, pclath, cstack
   474 ;; Tracked objects:
   475 ;;		On entry : B00/0
   476 ;;		On exit  : 0/0
   477 ;;		Unchanged: 0/0
   478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   479 ;;      Params:         0       0       0       0       0
   480 ;;      Locals:         0       0       0       0       0
   481 ;;      Temps:          0       2       0       0       0
   482 ;;      Totals:         0       2       0       0       0
   483 ;;Total ram usage:        2 bytes
   484 ;; Hardware stack levels required when called: 4
   485 ;; This function calls:
   486 ;;		_setup
   487 ;; This function is called by:
   488 ;;		Startup code after reset
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492     019A                     _main:	
   493                           ;psect for function _main
   494                           
   495     019A                     l1015:	
   496                           ;incstack = 0
   497                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   498                           
   499                           
   500                           ;main.c: 86:     setup();
   501     019A  120A  118A  21E9  120A  118A  	fcall	_setup
   502     019F                     l1017:
   503                           
   504                           ;main.c: 90:     ADCON0bits.CHS = 0;
   505     019F  30C3               	movlw	-61
   506     01A0  1283               	bcf	3,5	;RP0=0, select bank0
   507     01A1  1303               	bcf	3,6	;RP1=0, select bank0
   508     01A2  059F               	andwf	31,f	;volatile
   509     01A3                     l1019:
   510                           
   511                           ;main.c: 91:     ADCON0bits.GO = 1;
   512     01A3  149F               	bsf	31,1	;volatile
   513     01A4                     l80:	
   514                           ;main.c: 92:     while(ADCON0bits.GO);
   515                           
   516     01A4  189F               	btfsc	31,1	;volatile
   517     01A5  29A7               	goto	u331
   518     01A6  29A8               	goto	u330
   519     01A7                     u331:
   520     01A7  29A4               	goto	l80
   521     01A8                     u330:
   522     01A8                     l1021:
   523                           
   524                           ;main.c: 93:     adc1 = (ADRESH << 8) | ADRESL;
   525     01A8  081E               	movf	30,w	;volatile
   526     01A9  00A3               	movwf	_adc1+1
   527     01AA  1683               	bsf	3,5	;RP0=1, select bank1
   528     01AB  1303               	bcf	3,6	;RP1=0, select bank1
   529     01AC  081E               	movf	30,w	;volatile
   530     01AD  1283               	bcf	3,5	;RP0=0, select bank0
   531     01AE  1303               	bcf	3,6	;RP1=0, select bank0
   532     01AF  00A2               	movwf	_adc1
   533                           
   534                           ;main.c: 94:     PORTC = (char)(adc1 >> 2);
   535     01B0  0823               	movf	_adc1+1,w
   536     01B1  00B5               	movwf	??_main+1
   537     01B2  0822               	movf	_adc1,w
   538     01B3  00B4               	movwf	??_main
   539     01B4  0D35               	rlf	??_main+1,w
   540     01B5  0CB5               	rrf	??_main+1,f
   541     01B6  0CB4               	rrf	??_main,f
   542     01B7  0D35               	rlf	??_main+1,w
   543     01B8  0CB5               	rrf	??_main+1,f
   544     01B9  0CB4               	rrf	??_main,f
   545     01BA  0834               	movf	??_main,w
   546     01BB  0087               	movwf	7	;volatile
   547                           
   548                           ;main.c: 95:     _delay((unsigned long)((10)*(8000000/4000.0)));
   549     01BC  301A               	movlw	26
   550     01BD  1283               	bcf	3,5	;RP0=0, select bank0
   551     01BE  1303               	bcf	3,6	;RP1=0, select bank0
   552     01BF  00B5               	movwf	??_main+1
   553     01C0  30F7               	movlw	247
   554     01C1  00B4               	movwf	??_main
   555     01C2                     u357:
   556     01C2  0BB4               	decfsz	??_main,f
   557     01C3  29C2               	goto	u357
   558     01C4  0BB5               	decfsz	??_main+1,f
   559     01C5  29C2               	goto	u357
   560     01C6  29C7               	nop2
   561     01C7                     l1023:
   562                           
   563                           ;main.c: 98:     ADCON0bits.CHS = 4;
   564     01C7  1283               	bcf	3,5	;RP0=0, select bank0
   565     01C8  1303               	bcf	3,6	;RP1=0, select bank0
   566     01C9  081F               	movf	31,w	;volatile
   567     01CA  39C3               	andlw	-61
   568     01CB  3810               	iorlw	16
   569     01CC  009F               	movwf	31	;volatile
   570     01CD                     l1025:
   571                           
   572                           ;main.c: 99:     ADCON0bits.GO = 1;
   573     01CD  149F               	bsf	31,1	;volatile
   574     01CE                     l83:	
   575                           ;main.c: 100:     while(ADCON0bits.GO);
   576                           
   577     01CE  189F               	btfsc	31,1	;volatile
   578     01CF  29D1               	goto	u341
   579     01D0  29D2               	goto	u340
   580     01D1                     u341:
   581     01D1  29CE               	goto	l83
   582     01D2                     u340:
   583     01D2                     l1027:
   584                           
   585                           ;main.c: 101:     adc2 = (ADRESH << 8) | ADRESL;
   586     01D2  081E               	movf	30,w	;volatile
   587     01D3  00A1               	movwf	_adc2+1
   588     01D4  1683               	bsf	3,5	;RP0=1, select bank1
   589     01D5  1303               	bcf	3,6	;RP1=0, select bank1
   590     01D6  081E               	movf	30,w	;volatile
   591     01D7  1283               	bcf	3,5	;RP0=0, select bank0
   592     01D8  1303               	bcf	3,6	;RP1=0, select bank0
   593     01D9  00A0               	movwf	_adc2
   594                           
   595                           ;main.c: 102:     _delay((unsigned long)((10)*(8000000/4000.0)));
   596     01DA  301A               	movlw	26
   597     01DB  1283               	bcf	3,5	;RP0=0, select bank0
   598     01DC  1303               	bcf	3,6	;RP1=0, select bank0
   599     01DD  00B5               	movwf	??_main+1
   600     01DE  30F7               	movlw	247
   601     01DF  00B4               	movwf	??_main
   602     01E0                     u367:
   603     01E0  0BB4               	decfsz	??_main,f
   604     01E1  29E0               	goto	u367
   605     01E2  0BB5               	decfsz	??_main+1,f
   606     01E3  29E0               	goto	u367
   607     01E4  29E5               	nop2
   608     01E5  299F               	goto	l1017
   609     01E6  120A  118A  2812   	ljmp	start
   610     01E9                     __end_of_main:
   611                           
   612                           	psect	text1
   613     01E9                     __ptext1:	
   614 ;; *************** function _setup *****************
   615 ;; Defined at:
   616 ;;		line 108 in file "main.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, status,2, status,0
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   630 ;;      Params:         0       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0
   632 ;;      Temps:          0       2       0       0       0
   633 ;;      Totals:         0       2       0       0       0
   634 ;;Total ram usage:        2 bytes
   635 ;; Hardware stack levels used: 1
   636 ;; Hardware stack levels required when called: 3
   637 ;; This function calls:
   638 ;;		Nothing
   639 ;; This function is called by:
   640 ;;		_main
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644     01E9                     _setup:	
   645                           ;psect for function _setup
   646                           
   647     01E9                     l933:	
   648                           ;incstack = 0
   649                           ; Regs used in _setup: [wreg+status,2+status,0]
   650                           
   651                           
   652                           ;main.c: 110:     ANSEL = 0;
   653     01E9  1683               	bsf	3,5	;RP0=1, select bank3
   654     01EA  1703               	bsf	3,6	;RP1=1, select bank3
   655     01EB  0188               	clrf	8	;volatile
   656                           
   657                           ;main.c: 111:     ANSELH = 0;
   658     01EC  0189               	clrf	9	;volatile
   659                           
   660                           ;main.c: 112:     TRISB = 0;
   661     01ED  1683               	bsf	3,5	;RP0=1, select bank1
   662     01EE  1303               	bcf	3,6	;RP1=0, select bank1
   663     01EF  0186               	clrf	6	;volatile
   664                           
   665                           ;main.c: 113:     TRISC = 0;
   666     01F0  0187               	clrf	7	;volatile
   667                           
   668                           ;main.c: 114:     TRISD = 0;
   669     01F1  0188               	clrf	8	;volatile
   670     01F2                     l935:
   671                           
   672                           ;main.c: 117:     OSCCONbits.IRCF = 0b111;
   673     01F2  3070               	movlw	112
   674     01F3  048F               	iorwf	15,f	;volatile
   675     01F4                     l937:
   676                           
   677                           ;main.c: 118:     OSCCONbits.SCS = 1;
   678     01F4  140F               	bsf	15,0	;volatile
   679     01F5                     l939:
   680                           
   681                           ;main.c: 121:     OPTION_REGbits.T0CS = 0;
   682     01F5  1281               	bcf	1,5	;volatile
   683     01F6                     l941:
   684                           
   685                           ;main.c: 122:     OPTION_REGbits.PSA = 0;
   686     01F6  1181               	bcf	1,3	;volatile
   687     01F7                     l943:
   688                           
   689                           ;main.c: 123:     OPTION_REGbits.PS = 0b111;
   690     01F7  3007               	movlw	7
   691     01F8  0481               	iorwf	1,f	;volatile
   692     01F9                     l945:
   693                           
   694                           ;main.c: 124:     TMR0 = 200;
   695     01F9  30C8               	movlw	200
   696     01FA  1283               	bcf	3,5	;RP0=0, select bank0
   697     01FB  1303               	bcf	3,6	;RP1=0, select bank0
   698     01FC  0081               	movwf	1	;volatile
   699     01FD                     l947:
   700                           
   701                           ;main.c: 127:     INTCONbits.T0IF = 0;
   702     01FD  110B               	bcf	11,2	;volatile
   703     01FE                     l949:
   704                           
   705                           ;main.c: 128:     INTCONbits.T0IE = 1;
   706     01FE  168B               	bsf	11,5	;volatile
   707     01FF                     l951:
   708                           
   709                           ;main.c: 129:     INTCONbits.GIE = 1;
   710     01FF  178B               	bsf	11,7	;volatile
   711     0200                     l953:
   712                           
   713                           ;main.c: 132:     TRISAbits.TRISA0 = 1;
   714     0200  1683               	bsf	3,5	;RP0=1, select bank1
   715     0201  1303               	bcf	3,6	;RP1=0, select bank1
   716     0202  1405               	bsf	5,0	;volatile
   717     0203                     l955:
   718                           
   719                           ;main.c: 133:     ANSELbits.ANS0 = 1;
   720     0203  1683               	bsf	3,5	;RP0=1, select bank3
   721     0204  1703               	bsf	3,6	;RP1=1, select bank3
   722     0205  1408               	bsf	8,0	;volatile
   723     0206                     l957:
   724                           
   725                           ;main.c: 134:     ADCON0bits.CHS = 0;
   726     0206  30C3               	movlw	-61
   727     0207  1283               	bcf	3,5	;RP0=0, select bank0
   728     0208  1303               	bcf	3,6	;RP1=0, select bank0
   729     0209  059F               	andwf	31,f	;volatile
   730     020A                     l959:
   731                           
   732                           ;main.c: 135:     _delay((unsigned long)((1)*(8000000/4000.0)));
   733     020A  3003               	movlw	3
   734     020B  1283               	bcf	3,5	;RP0=0, select bank0
   735     020C  1303               	bcf	3,6	;RP1=0, select bank0
   736     020D  00B3               	movwf	??_setup+1
   737     020E  3097               	movlw	151
   738     020F  00B2               	movwf	??_setup
   739     0210                     u377:
   740     0210  0BB2               	decfsz	??_setup,f
   741     0211  2A10               	goto	u377
   742     0212  0BB3               	decfsz	??_setup+1,f
   743     0213  2A10               	goto	u377
   744     0214                     l961:
   745                           
   746                           ;main.c: 136:     TRISAbits.TRISA5 = 1;
   747     0214  1683               	bsf	3,5	;RP0=1, select bank1
   748     0215  1303               	bcf	3,6	;RP1=0, select bank1
   749     0216  1685               	bsf	5,5	;volatile
   750     0217                     l963:
   751                           
   752                           ;main.c: 137:     ANSELbits.ANS4 = 1;
   753     0217  1683               	bsf	3,5	;RP0=1, select bank3
   754     0218  1703               	bsf	3,6	;RP1=1, select bank3
   755     0219  1608               	bsf	8,4	;volatile
   756     021A                     l965:
   757                           
   758                           ;main.c: 138:     ADCON0bits.CHS = 4;
   759     021A  1283               	bcf	3,5	;RP0=0, select bank0
   760     021B  1303               	bcf	3,6	;RP1=0, select bank0
   761     021C  081F               	movf	31,w	;volatile
   762     021D  39C3               	andlw	-61
   763     021E  3810               	iorlw	16
   764     021F  009F               	movwf	31	;volatile
   765     0220                     l967:
   766                           
   767                           ;main.c: 139:     _delay((unsigned long)((1)*(8000000/4000.0)));
   768     0220  3003               	movlw	3
   769     0221  1283               	bcf	3,5	;RP0=0, select bank0
   770     0222  1303               	bcf	3,6	;RP1=0, select bank0
   771     0223  00B3               	movwf	??_setup+1
   772     0224  3097               	movlw	151
   773     0225  00B2               	movwf	??_setup
   774     0226                     u387:
   775     0226  0BB2               	decfsz	??_setup,f
   776     0227  2A26               	goto	u387
   777     0228  0BB3               	decfsz	??_setup+1,f
   778     0229  2A26               	goto	u387
   779     022A                     l969:
   780                           
   781                           ;main.c: 140:     ADCON1bits.ADFM = 1;
   782     022A  1683               	bsf	3,5	;RP0=1, select bank1
   783     022B  1303               	bcf	3,6	;RP1=0, select bank1
   784     022C  179F               	bsf	31,7	;volatile
   785     022D                     l971:
   786                           
   787                           ;main.c: 141:     ADCON1bits.VCFG0 = 0;
   788     022D  121F               	bcf	31,4	;volatile
   789     022E                     l973:
   790                           
   791                           ;main.c: 142:     ADCON1bits.VCFG1 = 1;
   792     022E  169F               	bsf	31,5	;volatile
   793     022F                     l975:
   794                           
   795                           ;main.c: 143:     ADCON0bits.ADON = 1;
   796     022F  1283               	bcf	3,5	;RP0=0, select bank0
   797     0230  1303               	bcf	3,6	;RP1=0, select bank0
   798     0231  141F               	bsf	31,0	;volatile
   799     0232                     l977:
   800                           
   801                           ;main.c: 144:     ADIF = 0;
   802     0232  130C               	bcf	12,6	;volatile
   803     0233                     l91:
   804     0233  0008               	return
   805     0234                     __end_of_setup:
   806                           
   807                           	psect	text2
   808     0037                     __ptext2:	
   809 ;; *************** function _isr *****************
   810 ;; Defined at:
   811 ;;		line 61 in file "main.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   825 ;;      Params:         0       0       0       0       0
   826 ;;      Locals:         0       0       0       0       0
   827 ;;      Temps:          0       6       0       0       0
   828 ;;      Totals:         0       6       0       0       0
   829 ;;Total ram usage:        6 bytes
   830 ;; Hardware stack levels used: 1
   831 ;; Hardware stack levels required when called: 2
   832 ;; This function calls:
   833 ;;		_getDigits
   834 ;;		_table
   835 ;; This function is called by:
   836 ;;		Interrupt level 1
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840     0037                     _isr:	
   841                           ;psect for function _isr
   842                           
   843     0037                     i1l979:
   844                           
   845                           ;main.c: 62:     if (T0IF) {
   846     0037  1D0B               	btfss	11,2	;volatile
   847     0038  283A               	goto	u32_21
   848     0039  283B               	goto	u32_20
   849     003A                     u32_21:
   850     003A  28AE               	goto	i1l74
   851     003B                     u32_20:
   852     003B                     i1l981:
   853                           
   854                           ;main.c: 63:     getDigits(adc2);
   855     003B  0821               	movf	_adc2+1,w
   856     003C  00FA               	movwf	getDigits@num+1
   857     003D  0820               	movf	_adc2,w
   858     003E  00F9               	movwf	getDigits@num
   859     003F  120A  118A  20BB  120A  118A  	fcall	_getDigits
   860     0044                     i1l983:
   861                           
   862                           ;main.c: 64:     PORTB = 0b000;
   863     0044  1283               	bcf	3,5	;RP0=0, select bank0
   864     0045  1303               	bcf	3,6	;RP1=0, select bank0
   865     0046  0186               	clrf	6	;volatile
   866     0047                     i1l985:
   867                           
   868                           ;main.c: 65:     value_display = table(hundreds);
   869     0047  0827               	movf	_hundreds+1,w
   870     0048  00F1               	movwf	table@digit+1
   871     0049  0826               	movf	_hundreds,w
   872     004A  00F0               	movwf	table@digit
   873     004B  120A  118A  227F  120A  118A  	fcall	_table
   874     0050  1283               	bcf	3,5	;RP0=0, select bank0
   875     0051  1303               	bcf	3,6	;RP1=0, select bank0
   876     0052  00AC               	movwf	??_isr
   877     0053  01AD               	clrf	??_isr+1
   878     0054  082C               	movf	??_isr,w
   879     0055  00A4               	movwf	_value_display
   880     0056  082D               	movf	??_isr+1,w
   881     0057  00A5               	movwf	_value_display+1
   882     0058                     i1l987:
   883                           
   884                           ;main.c: 66:     PORTD = value_display;
   885     0058  0824               	movf	_value_display,w
   886     0059  0088               	movwf	8	;volatile
   887     005A                     i1l989:
   888                           
   889                           ;main.c: 67:     PORTB = 0b100;
   890     005A  3004               	movlw	4
   891     005B  0086               	movwf	6	;volatile
   892     005C                     i1l991:
   893                           
   894                           ;main.c: 68:     _delay((unsigned long)((10)*(8000000/4000.0)));
   895     005C  301A               	movlw	26
   896     005D  1283               	bcf	3,5	;RP0=0, select bank0
   897     005E  1303               	bcf	3,6	;RP1=0, select bank0
   898     005F  00AD               	movwf	??_isr+1
   899     0060  30F7               	movlw	247
   900     0061  00AC               	movwf	??_isr
   901     0062                     u39_27:
   902     0062  0BAC               	decfsz	??_isr,f
   903     0063  2862               	goto	u39_27
   904     0064  0BAD               	decfsz	??_isr+1,f
   905     0065  2862               	goto	u39_27
   906     0066  2867               	nop2
   907     0067                     i1l993:
   908                           
   909                           ;main.c: 69:     PORTB = 0b000;
   910     0067  1283               	bcf	3,5	;RP0=0, select bank0
   911     0068  1303               	bcf	3,6	;RP1=0, select bank0
   912     0069  0186               	clrf	6	;volatile
   913     006A                     i1l995:
   914                           
   915                           ;main.c: 70:     value_display = table(tens);
   916     006A  0829               	movf	_tens+1,w
   917     006B  00F1               	movwf	table@digit+1
   918     006C  0828               	movf	_tens,w
   919     006D  00F0               	movwf	table@digit
   920     006E  120A  118A  227F  120A  118A  	fcall	_table
   921     0073  1283               	bcf	3,5	;RP0=0, select bank0
   922     0074  1303               	bcf	3,6	;RP1=0, select bank0
   923     0075  00AC               	movwf	??_isr
   924     0076  01AD               	clrf	??_isr+1
   925     0077  082C               	movf	??_isr,w
   926     0078  00A4               	movwf	_value_display
   927     0079  082D               	movf	??_isr+1,w
   928     007A  00A5               	movwf	_value_display+1
   929     007B                     i1l997:
   930                           
   931                           ;main.c: 71:     PORTD = value_display;
   932     007B  0824               	movf	_value_display,w
   933     007C  0088               	movwf	8	;volatile
   934     007D                     i1l999:
   935                           
   936                           ;main.c: 72:     PORTB = 0b010;
   937     007D  3002               	movlw	2
   938     007E  0086               	movwf	6	;volatile
   939     007F                     i1l1001:
   940                           
   941                           ;main.c: 73:     _delay((unsigned long)((10)*(8000000/4000.0)));
   942     007F  301A               	movlw	26
   943     0080  1283               	bcf	3,5	;RP0=0, select bank0
   944     0081  1303               	bcf	3,6	;RP1=0, select bank0
   945     0082  00AD               	movwf	??_isr+1
   946     0083  30F7               	movlw	247
   947     0084  00AC               	movwf	??_isr
   948     0085                     u40_27:
   949     0085  0BAC               	decfsz	??_isr,f
   950     0086  2885               	goto	u40_27
   951     0087  0BAD               	decfsz	??_isr+1,f
   952     0088  2885               	goto	u40_27
   953     0089  288A               	nop2
   954     008A                     i1l1003:
   955                           
   956                           ;main.c: 74:     PORTB = 0b000;
   957     008A  1283               	bcf	3,5	;RP0=0, select bank0
   958     008B  1303               	bcf	3,6	;RP1=0, select bank0
   959     008C  0186               	clrf	6	;volatile
   960     008D                     i1l1005:
   961                           
   962                           ;main.c: 75:     value_display = table(unit);
   963     008D  082B               	movf	_unit+1,w
   964     008E  00F1               	movwf	table@digit+1
   965     008F  082A               	movf	_unit,w
   966     0090  00F0               	movwf	table@digit
   967     0091  120A  118A  227F  120A  118A  	fcall	_table
   968     0096  1283               	bcf	3,5	;RP0=0, select bank0
   969     0097  1303               	bcf	3,6	;RP1=0, select bank0
   970     0098  00AC               	movwf	??_isr
   971     0099  01AD               	clrf	??_isr+1
   972     009A  082C               	movf	??_isr,w
   973     009B  00A4               	movwf	_value_display
   974     009C  082D               	movf	??_isr+1,w
   975     009D  00A5               	movwf	_value_display+1
   976     009E                     i1l1007:
   977                           
   978                           ;main.c: 76:     PORTD = value_display;
   979     009E  0824               	movf	_value_display,w
   980     009F  0088               	movwf	8	;volatile
   981     00A0                     i1l1009:
   982                           
   983                           ;main.c: 77:     PORTB = 0b001;
   984     00A0  3001               	movlw	1
   985     00A1  0086               	movwf	6	;volatile
   986     00A2                     i1l1011:
   987                           
   988                           ;main.c: 78:     _delay((unsigned long)((10)*(8000000/4000.0)));
   989     00A2  301A               	movlw	26
   990     00A3  1283               	bcf	3,5	;RP0=0, select bank0
   991     00A4  1303               	bcf	3,6	;RP1=0, select bank0
   992     00A5  00AD               	movwf	??_isr+1
   993     00A6  30F7               	movlw	247
   994     00A7  00AC               	movwf	??_isr
   995     00A8                     u41_27:
   996     00A8  0BAC               	decfsz	??_isr,f
   997     00A9  28A8               	goto	u41_27
   998     00AA  0BAD               	decfsz	??_isr+1,f
   999     00AB  28A8               	goto	u41_27
  1000     00AC  28AD               	nop2
  1001     00AD                     i1l1013:
  1002                           
  1003                           ;main.c: 80:  T0IF = 0;
  1004     00AD  110B               	bcf	11,2	;volatile
  1005     00AE                     i1l74:
  1006     00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1007     00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1008     00B0  0831               	movf	??_isr+5,w
  1009     00B1  00FF               	movwf	btemp+1
  1010     00B2  0830               	movf	??_isr+4,w
  1011     00B3  008A               	movwf	10
  1012     00B4  082F               	movf	??_isr+3,w
  1013     00B5  0084               	movwf	4
  1014     00B6  0E2E               	swapf	??_isr+2,w
  1015     00B7  0083               	movwf	3
  1016     00B8  0EFE               	swapf	btemp,f
  1017     00B9  0E7E               	swapf	btemp,w
  1018     00BA  0009               	retfie
  1019     00BB                     __end_of_isr:
  1020                           
  1021                           	psect	intentry
  1022     0004                     __pintentry:	
  1023                           ;incstack = 0
  1024                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1025                           
  1026     0004                     interrupt_function:
  1027     007E                     saved_w	set	btemp
  1028     0004  00FE               	movwf	btemp
  1029     0005  0E03               	swapf	3,w
  1030     0006  1283               	bcf	3,5	;RP0=0, select bank0
  1031     0007  1303               	bcf	3,6	;RP1=0, select bank0
  1032     0008  00AE               	movwf	??_isr+2
  1033     0009  0804               	movf	4,w
  1034     000A  00AF               	movwf	??_isr+3
  1035     000B  080A               	movf	10,w
  1036     000C  00B0               	movwf	??_isr+4
  1037     000D  087F               	movf	btemp+1,w
  1038     000E  00B1               	movwf	??_isr+5
  1039     000F  120A  118A  2837   	ljmp	_isr
  1040                           
  1041                           	psect	text3
  1042     027F                     __ptext3:	
  1043 ;; *************** function _table *****************
  1044 ;; Defined at:
  1045 ;;		line 147 in file "main.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;  digit           2    0[COMMON] int 
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      unsigned char 
  1052 ;; Registers used:
  1053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1059 ;;      Params:         2       0       0       0       0
  1060 ;;      Locals:         0       0       0       0       0
  1061 ;;      Temps:          1       0       0       0       0
  1062 ;;      Totals:         3       0       0       0       0
  1063 ;;Total ram usage:        3 bytes
  1064 ;; Hardware stack levels used: 2
  1065 ;; This function calls:
  1066 ;;		Nothing
  1067 ;; This function is called by:
  1068 ;;		_isr
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072     027F                     _table:	
  1073                           ;psect for function _table
  1074                           
  1075     027F                     i1l929:	
  1076                           ;incstack = 0
  1077                           ; Regs used in _table: [wreg-fsr0h+status,2+status,0+pclath]
  1078                           
  1079                           
  1080                           ;main.c: 148:     return table_display[digit];
  1081     027F  0870               	movf	table@digit,w
  1082     0280  00F2               	movwf	??_table
  1083     0281  0772               	addwf	??_table,w
  1084     0282  3E01               	addlw	low ((_table_display-__stringbase)| (0+32768))
  1085     0283  0084               	movwf	4
  1086     0284  120A  118A  2234  120A  118A  	fcall	stringdir
  1087     0289                     i1l94:
  1088     0289  0008               	return
  1089     028A                     __end_of_table:
  1090                           
  1091                           	psect	text4
  1092     00BB                     __ptext4:	
  1093 ;; *************** function _getDigits *****************
  1094 ;; Defined at:
  1095 ;;		line 151 in file "main.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;  num             2    9[COMMON] int 
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;  num2            2   11[COMMON] int 
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1109 ;;      Params:         2       0       0       0       0
  1110 ;;      Locals:         2       0       0       0       0
  1111 ;;      Temps:          0       0       0       0       0
  1112 ;;      Totals:         4       0       0       0       0
  1113 ;;Total ram usage:        4 bytes
  1114 ;; Hardware stack levels used: 1
  1115 ;; Hardware stack levels required when called: 1
  1116 ;; This function calls:
  1117 ;;		___awdiv
  1118 ;;		___wmul
  1119 ;; This function is called by:
  1120 ;;		_isr
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124     00BB                     _getDigits:	
  1125                           ;psect for function _getDigits
  1126                           
  1127     00BB                     i1l917:	
  1128                           ;incstack = 0
  1129                           ; Regs used in _getDigits: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1130                           
  1131                           
  1132                           ;main.c: 153:     int num2 = num/2;
  1133     00BB  3002               	movlw	2
  1134     00BC  00F0               	movwf	___awdiv@divisor
  1135     00BD  3000               	movlw	0
  1136     00BE  00F1               	movwf	___awdiv@divisor+1
  1137     00BF  087A               	movf	getDigits@num+1,w
  1138     00C0  00F3               	movwf	___awdiv@dividend+1
  1139     00C1  0879               	movf	getDigits@num,w
  1140     00C2  00F2               	movwf	___awdiv@dividend
  1141     00C3  120A  118A  2133  120A  118A  	fcall	___awdiv
  1142     00C8  0871               	movf	?___awdiv+1,w
  1143     00C9  00FC               	movwf	getDigits@num2+1
  1144     00CA  0870               	movf	?___awdiv,w
  1145     00CB  00FB               	movwf	getDigits@num2
  1146     00CC                     i1l919:
  1147                           
  1148                           ;main.c: 154:     *pHundreds = (int) (num2 / 100);
  1149     00CC  3064               	movlw	100
  1150     00CD  00F0               	movwf	___awdiv@divisor
  1151     00CE  3000               	movlw	0
  1152     00CF  00F1               	movwf	___awdiv@divisor+1
  1153     00D0  087C               	movf	getDigits@num2+1,w
  1154     00D1  00F3               	movwf	___awdiv@dividend+1
  1155     00D2  087B               	movf	getDigits@num2,w
  1156     00D3  00F2               	movwf	___awdiv@dividend
  1157     00D4  120A  118A  2133  120A  118A  	fcall	___awdiv
  1158     00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1159     00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1160     00DB  0836               	movf	_pHundreds,w
  1161     00DC  0084               	movwf	4
  1162     00DD  0870               	movf	?___awdiv,w
  1163     00DE  1383               	bcf	3,7	;select IRP bank0
  1164     00DF  0080               	movwf	0
  1165     00E0  0A84               	incf	4,f
  1166     00E1  0871               	movf	?___awdiv+1,w
  1167     00E2  0080               	movwf	0
  1168     00E3                     i1l921:
  1169                           
  1170                           ;main.c: 155:     num2 = (int) (num2 - (*pHundreds)*100);
  1171     00E3  0836               	movf	_pHundreds,w
  1172     00E4  0084               	movwf	4
  1173     00E5  0800               	movf	0,w
  1174     00E6  00F0               	movwf	___wmul@multiplier
  1175     00E7  0A84               	incf	4,f
  1176     00E8  0800               	movf	0,w
  1177     00E9  00F1               	movwf	___wmul@multiplier+1
  1178     00EA  309C               	movlw	156
  1179     00EB  00F2               	movwf	___wmul@multiplicand
  1180     00EC  30FF               	movlw	255
  1181     00ED  00F3               	movwf	___wmul@multiplicand+1
  1182     00EE  120A  118A  225A  120A  118A  	fcall	___wmul
  1183     00F3  087B               	movf	getDigits@num2,w
  1184     00F4  0770               	addwf	?___wmul,w
  1185     00F5  00FB               	movwf	getDigits@num2
  1186     00F6  087C               	movf	getDigits@num2+1,w
  1187     00F7  1803               	skipnc
  1188     00F8  0A7C               	incf	getDigits@num2+1,w
  1189     00F9  0771               	addwf	?___wmul+1,w
  1190     00FA  00FC               	movwf	getDigits@num2+1
  1191     00FB                     i1l923:
  1192                           
  1193                           ;main.c: 156:     *pTens = (int) (num2 / 10);
  1194     00FB  300A               	movlw	10
  1195     00FC  00F0               	movwf	___awdiv@divisor
  1196     00FD  3000               	movlw	0
  1197     00FE  00F1               	movwf	___awdiv@divisor+1
  1198     00FF  087C               	movf	getDigits@num2+1,w
  1199     0100  00F3               	movwf	___awdiv@dividend+1
  1200     0101  087B               	movf	getDigits@num2,w
  1201     0102  00F2               	movwf	___awdiv@dividend
  1202     0103  120A  118A  2133  120A  118A  	fcall	___awdiv
  1203     0108  087D               	movf	_pTens,w
  1204     0109  0084               	movwf	4
  1205     010A  0870               	movf	?___awdiv,w
  1206     010B  1383               	bcf	3,7	;select IRP bank0
  1207     010C  0080               	movwf	0
  1208     010D  0A84               	incf	4,f
  1209     010E  0871               	movf	?___awdiv+1,w
  1210     010F  0080               	movwf	0
  1211     0110                     i1l925:
  1212                           
  1213                           ;main.c: 157:     num2 = (int) (num2 - (*pTens)*10);
  1214     0110  087D               	movf	_pTens,w
  1215     0111  0084               	movwf	4
  1216     0112  0800               	movf	0,w
  1217     0113  00F0               	movwf	___wmul@multiplier
  1218     0114  0A84               	incf	4,f
  1219     0115  0800               	movf	0,w
  1220     0116  00F1               	movwf	___wmul@multiplier+1
  1221     0117  30F6               	movlw	246
  1222     0118  00F2               	movwf	___wmul@multiplicand
  1223     0119  30FF               	movlw	255
  1224     011A  00F3               	movwf	___wmul@multiplicand+1
  1225     011B  120A  118A  225A  120A  118A  	fcall	___wmul
  1226     0120  087B               	movf	getDigits@num2,w
  1227     0121  0770               	addwf	?___wmul,w
  1228     0122  00FB               	movwf	getDigits@num2
  1229     0123  087C               	movf	getDigits@num2+1,w
  1230     0124  1803               	skipnc
  1231     0125  0A7C               	incf	getDigits@num2+1,w
  1232     0126  0771               	addwf	?___wmul+1,w
  1233     0127  00FC               	movwf	getDigits@num2+1
  1234     0128                     i1l927:
  1235                           
  1236                           ;main.c: 158:     *pUnit =(int) (num2);
  1237     0128  1283               	bcf	3,5	;RP0=0, select bank0
  1238     0129  1303               	bcf	3,6	;RP1=0, select bank0
  1239     012A  0837               	movf	_pUnit,w
  1240     012B  0084               	movwf	4
  1241     012C  087B               	movf	getDigits@num2,w
  1242     012D  1383               	bcf	3,7	;select IRP bank0
  1243     012E  0080               	movwf	0
  1244     012F  0A84               	incf	4,f
  1245     0130  087C               	movf	getDigits@num2+1,w
  1246     0131  0080               	movwf	0
  1247     0132                     i1l97:
  1248     0132  0008               	return
  1249     0133                     __end_of_getDigits:
  1250                           
  1251                           	psect	text5
  1252     025A                     __ptext5:	
  1253 ;; *************** function ___wmul *****************
  1254 ;; Defined at:
  1255 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  multiplier      2    0[COMMON] unsigned int 
  1258 ;;  multiplicand    2    2[COMMON] unsigned int 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  product         2    4[COMMON] unsigned int 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  2    0[COMMON] unsigned int 
  1263 ;; Registers used:
  1264 ;;		wreg, status,2, status,0
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1270 ;;      Params:         4       0       0       0       0
  1271 ;;      Locals:         2       0       0       0       0
  1272 ;;      Temps:          0       0       0       0       0
  1273 ;;      Totals:         6       0       0       0       0
  1274 ;;Total ram usage:        6 bytes
  1275 ;; Hardware stack levels used: 1
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_getDigits
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283     025A                     ___wmul:	
  1284                           ;psect for function ___wmul
  1285                           
  1286     025A                     i1l859:	
  1287                           ;incstack = 0
  1288                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1289                           
  1290     025A  01F4               	clrf	___wmul@product
  1291     025B  01F5               	clrf	___wmul@product+1
  1292     025C                     i1l861:
  1293     025C  1C70               	btfss	___wmul@multiplier,0
  1294     025D  2A5F               	goto	u18_21
  1295     025E  2A60               	goto	u18_20
  1296     025F                     u18_21:
  1297     025F  2A66               	goto	i1l183
  1298     0260                     u18_20:
  1299     0260                     i1l863:
  1300     0260  0872               	movf	___wmul@multiplicand,w
  1301     0261  07F4               	addwf	___wmul@product,f
  1302     0262  1803               	skipnc
  1303     0263  0AF5               	incf	___wmul@product+1,f
  1304     0264  0873               	movf	___wmul@multiplicand+1,w
  1305     0265  07F5               	addwf	___wmul@product+1,f
  1306     0266                     i1l183:
  1307     0266  3001               	movlw	1
  1308     0267                     u19_25:
  1309     0267  1003               	clrc
  1310     0268  0DF2               	rlf	___wmul@multiplicand,f
  1311     0269  0DF3               	rlf	___wmul@multiplicand+1,f
  1312     026A  3EFF               	addlw	-1
  1313     026B  1D03               	skipz
  1314     026C  2A67               	goto	u19_25
  1315     026D                     i1l865:
  1316     026D  3001               	movlw	1
  1317     026E                     u20_25:
  1318     026E  1003               	clrc
  1319     026F  0CF1               	rrf	___wmul@multiplier+1,f
  1320     0270  0CF0               	rrf	___wmul@multiplier,f
  1321     0271  3EFF               	addlw	-1
  1322     0272  1D03               	skipz
  1323     0273  2A6E               	goto	u20_25
  1324     0274                     i1l867:
  1325     0274  0870               	movf	___wmul@multiplier,w
  1326     0275  0471               	iorwf	___wmul@multiplier+1,w
  1327     0276  1D03               	btfss	3,2
  1328     0277  2A79               	goto	u21_21
  1329     0278  2A7A               	goto	u21_20
  1330     0279                     u21_21:
  1331     0279  2A5C               	goto	i1l861
  1332     027A                     u21_20:
  1333     027A                     i1l869:
  1334     027A  0875               	movf	___wmul@product+1,w
  1335     027B  00F1               	movwf	?___wmul+1
  1336     027C  0874               	movf	___wmul@product,w
  1337     027D  00F0               	movwf	?___wmul
  1338     027E                     i1l185:
  1339     027E  0008               	return
  1340     027F                     __end_of___wmul:
  1341                           
  1342                           	psect	text6
  1343     0133                     __ptext6:	
  1344 ;; *************** function ___awdiv *****************
  1345 ;; Defined at:
  1346 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;  divisor         2    0[COMMON] int 
  1349 ;;  dividend        2    2[COMMON] int 
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;  quotient        2    7[COMMON] int 
  1352 ;;  sign            1    6[COMMON] unsigned char 
  1353 ;;  counter         1    5[COMMON] unsigned char 
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  2    0[COMMON] int 
  1356 ;; Registers used:
  1357 ;;		wreg, status,2, status,0
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1363 ;;      Params:         4       0       0       0       0
  1364 ;;      Locals:         4       0       0       0       0
  1365 ;;      Temps:          1       0       0       0       0
  1366 ;;      Totals:         9       0       0       0       0
  1367 ;;Total ram usage:        9 bytes
  1368 ;; Hardware stack levels used: 1
  1369 ;; This function calls:
  1370 ;;		Nothing
  1371 ;; This function is called by:
  1372 ;;		_getDigits
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376     0133                     ___awdiv:	
  1377                           ;psect for function ___awdiv
  1378                           
  1379     0133                     i1l873:	
  1380                           ;incstack = 0
  1381                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1382                           
  1383     0133  01F6               	clrf	___awdiv@sign
  1384     0134                     i1l875:
  1385     0134  1FF1               	btfss	___awdiv@divisor+1,7
  1386     0135  2937               	goto	u22_21
  1387     0136  2938               	goto	u22_20
  1388     0137                     u22_21:
  1389     0137  293F               	goto	i1l881
  1390     0138                     u22_20:
  1391     0138                     i1l877:
  1392     0138  09F0               	comf	___awdiv@divisor,f
  1393     0139  09F1               	comf	___awdiv@divisor+1,f
  1394     013A  0AF0               	incf	___awdiv@divisor,f
  1395     013B  1903               	skipnz
  1396     013C  0AF1               	incf	___awdiv@divisor+1,f
  1397     013D                     i1l879:
  1398     013D  01F6               	clrf	___awdiv@sign
  1399     013E  0AF6               	incf	___awdiv@sign,f
  1400     013F                     i1l881:
  1401     013F  1FF3               	btfss	___awdiv@dividend+1,7
  1402     0140  2942               	goto	u23_21
  1403     0141  2943               	goto	u23_20
  1404     0142                     u23_21:
  1405     0142  294C               	goto	i1l887
  1406     0143                     u23_20:
  1407     0143                     i1l883:
  1408     0143  09F2               	comf	___awdiv@dividend,f
  1409     0144  09F3               	comf	___awdiv@dividend+1,f
  1410     0145  0AF2               	incf	___awdiv@dividend,f
  1411     0146  1903               	skipnz
  1412     0147  0AF3               	incf	___awdiv@dividend+1,f
  1413     0148                     i1l885:
  1414     0148  3001               	movlw	1
  1415     0149  00F4               	movwf	??___awdiv
  1416     014A  0874               	movf	??___awdiv,w
  1417     014B  06F6               	xorwf	___awdiv@sign,f
  1418     014C                     i1l887:
  1419     014C  01F7               	clrf	___awdiv@quotient
  1420     014D  01F8               	clrf	___awdiv@quotient+1
  1421     014E                     i1l889:
  1422     014E  0870               	movf	___awdiv@divisor,w
  1423     014F  0471               	iorwf	___awdiv@divisor+1,w
  1424     0150  1903               	btfsc	3,2
  1425     0151  2953               	goto	u24_21
  1426     0152  2954               	goto	u24_20
  1427     0153                     u24_21:
  1428     0153  298B               	goto	i1l909
  1429     0154                     u24_20:
  1430     0154                     i1l891:
  1431     0154  01F5               	clrf	___awdiv@counter
  1432     0155  0AF5               	incf	___awdiv@counter,f
  1433     0156  2962               	goto	i1l897
  1434     0157                     i1l893:
  1435     0157  3001               	movlw	1
  1436     0158                     u25_25:
  1437     0158  1003               	clrc
  1438     0159  0DF0               	rlf	___awdiv@divisor,f
  1439     015A  0DF1               	rlf	___awdiv@divisor+1,f
  1440     015B  3EFF               	addlw	-1
  1441     015C  1D03               	skipz
  1442     015D  2958               	goto	u25_25
  1443     015E                     i1l895:
  1444     015E  3001               	movlw	1
  1445     015F  00F4               	movwf	??___awdiv
  1446     0160  0874               	movf	??___awdiv,w
  1447     0161  07F5               	addwf	___awdiv@counter,f
  1448     0162                     i1l897:
  1449     0162  1FF1               	btfss	___awdiv@divisor+1,7
  1450     0163  2965               	goto	u26_21
  1451     0164  2966               	goto	u26_20
  1452     0165                     u26_21:
  1453     0165  2957               	goto	i1l893
  1454     0166                     u26_20:
  1455     0166                     i1l899:
  1456     0166  3001               	movlw	1
  1457     0167                     u27_25:
  1458     0167  1003               	clrc
  1459     0168  0DF7               	rlf	___awdiv@quotient,f
  1460     0169  0DF8               	rlf	___awdiv@quotient+1,f
  1461     016A  3EFF               	addlw	-1
  1462     016B  1D03               	skipz
  1463     016C  2967               	goto	u27_25
  1464     016D  0871               	movf	___awdiv@divisor+1,w
  1465     016E  0273               	subwf	___awdiv@dividend+1,w
  1466     016F  1D03               	skipz
  1467     0170  2973               	goto	u28_25
  1468     0171  0870               	movf	___awdiv@divisor,w
  1469     0172  0272               	subwf	___awdiv@dividend,w
  1470     0173                     u28_25:
  1471     0173  1C03               	skipc
  1472     0174  2976               	goto	u28_21
  1473     0175  2977               	goto	u28_20
  1474     0176                     u28_21:
  1475     0176  297E               	goto	i1l905
  1476     0177                     u28_20:
  1477     0177                     i1l901:
  1478     0177  0870               	movf	___awdiv@divisor,w
  1479     0178  02F2               	subwf	___awdiv@dividend,f
  1480     0179  0871               	movf	___awdiv@divisor+1,w
  1481     017A  1C03               	skipc
  1482     017B  03F3               	decf	___awdiv@dividend+1,f
  1483     017C  02F3               	subwf	___awdiv@dividend+1,f
  1484     017D                     i1l903:
  1485     017D  1477               	bsf	___awdiv@quotient,0
  1486     017E                     i1l905:
  1487     017E  3001               	movlw	1
  1488     017F                     u29_25:
  1489     017F  1003               	clrc
  1490     0180  0CF1               	rrf	___awdiv@divisor+1,f
  1491     0181  0CF0               	rrf	___awdiv@divisor,f
  1492     0182  3EFF               	addlw	-1
  1493     0183  1D03               	skipz
  1494     0184  297F               	goto	u29_25
  1495     0185                     i1l907:
  1496     0185  3001               	movlw	1
  1497     0186  02F5               	subwf	___awdiv@counter,f
  1498     0187  1D03               	btfss	3,2
  1499     0188  298A               	goto	u30_21
  1500     0189  298B               	goto	u30_20
  1501     018A                     u30_21:
  1502     018A  2966               	goto	i1l899
  1503     018B                     u30_20:
  1504     018B                     i1l909:
  1505     018B  0876               	movf	___awdiv@sign,w
  1506     018C  1903               	btfsc	3,2
  1507     018D  298F               	goto	u31_21
  1508     018E  2990               	goto	u31_20
  1509     018F                     u31_21:
  1510     018F  2995               	goto	i1l913
  1511     0190                     u31_20:
  1512     0190                     i1l911:
  1513     0190  09F7               	comf	___awdiv@quotient,f
  1514     0191  09F8               	comf	___awdiv@quotient+1,f
  1515     0192  0AF7               	incf	___awdiv@quotient,f
  1516     0193  1903               	skipnz
  1517     0194  0AF8               	incf	___awdiv@quotient+1,f
  1518     0195                     i1l913:
  1519     0195  0878               	movf	___awdiv@quotient+1,w
  1520     0196  00F1               	movwf	?___awdiv+1
  1521     0197  0877               	movf	___awdiv@quotient,w
  1522     0198  00F0               	movwf	?___awdiv
  1523     0199                     i1l336:
  1524     0199  0008               	return
  1525     019A                     __end_of___awdiv:
  1526     007E                     btemp	set	126	;btemp
  1527     007E                     wtemp0	set	126
  1528                           
  1529                           	psect	idloc
  1530                           
  1531                           ;Config register IDLOC0 @ 0x2000
  1532                           ;	unspecified, using default values
  1533     2000                     	org	8192
  1534     2000  3FFF               	dw	16383
  1535                           
  1536                           ;Config register IDLOC1 @ 0x2001
  1537                           ;	unspecified, using default values
  1538     2001                     	org	8193
  1539     2001  3FFF               	dw	16383
  1540                           
  1541                           ;Config register IDLOC2 @ 0x2002
  1542                           ;	unspecified, using default values
  1543     2002                     	org	8194
  1544     2002  3FFF               	dw	16383
  1545                           
  1546                           ;Config register IDLOC3 @ 0x2003
  1547                           ;	unspecified, using default values
  1548     2003                     	org	8195
  1549     2003  3FFF               	dw	16383
  1550                           
  1551                           	psect	config
  1552                           
  1553                           ;Config register CONFIG1 @ 0x2007
  1554                           ;	Oscillator Selection bits
  1555                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1556                           ;	Watchdog Timer Enable bit
  1557                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1558                           ;	Power-up Timer Enable bit
  1559                           ;	PWRTE = OFF, PWRT disabled
  1560                           ;	RE3/MCLR pin function select bit
  1561                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1562                           ;	Code Protection bit
  1563                           ;	CP = OFF, Program memory code protection is disabled
  1564                           ;	Data Code Protection bit
  1565                           ;	CPD = OFF, Data memory code protection is disabled
  1566                           ;	Brown Out Reset Selection bits
  1567                           ;	BOREN = OFF, BOR disabled
  1568                           ;	Internal External Switchover bit
  1569                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1570                           ;	Fail-Safe Clock Monitor Enabled bit
  1571                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1572                           ;	Low Voltage Programming Enable bit
  1573                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1574                           ;	In-Circuit Debugger Mode bit
  1575                           ;	DEBUG = 0x1, unprogramme  1576     2007                     	org	8199
  1577     2007  20D4               	dw	8404
  1578                           
  1579                           ;Config register CONFIG2 @ 0x2008
  1580                           ;	Brown-out Reset Selection bit
  1581                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1582                           ;	Flash Program Memory Self Write Enable bits
  1583                           ;	WRT = OFF, Write protection off
  1584     2008                     	org	8200
  1585     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    32
    Data        3
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     10      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    pHundreds	PTR int  size(1) Largest target is 2
		 -> hundreds(BANK0[2]), 

    pTens	PTR int  size(1) Largest target is 2
		 -> tens(BANK0[2]), 

    pUnit	PTR int  size(1) Largest target is 2
		 -> unit(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_getDigits
    _getDigits->___awdiv

Critical Paths under _main in BANK0

    _main->_setup

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              8 BANK0      2     2      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0       0
                                              6 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  6     6      0    1613
                                              0 BANK0      6     6      0
                          _getDigits
                              _table
 ---------------------------------------------------------------------------------
 (4) _table                                                3     1      2     250
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (3) _getDigits                                            4     2      2    1363
                                              9 COMMON     4     2      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)
   _getDigits
     ___awdiv
     ___wmul
   _table

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      18       5       30.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      26      12        0.0%
ABS                  0      0      26       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Mar 24 19:45:35 2023

                      pc 0002                       l80 01A4                       l91 0233  
                     l83 01CE             ___awdiv@sign 0076                       fsr 0004  
    ___wmul@multiplicand 0072                      l941 01F6                      l933 01E9  
                    l951 01FF                      l943 01F7                      l935 01F2  
                    l961 0214                      l953 0200                      l945 01F9  
                    l937 01F4                      l971 022D                      l963 0217  
                    l955 0203                      l947 01FD                      l939 01F5  
                    l973 022E                      l965 021A                      l957 0206  
                    l949 01FE                      l975 022F                      l967 0220  
                    l959 020A                      l977 0232                      l969 022A  
                    u330 01A8                      u331 01A7                      u340 01D2  
                    u341 01D1                      u357 01C2                      u367 01E0  
                    u377 0210                      u387 0226                      _isr 0037  
                    fsr0 0004                      indf 0000                     l1021 01A8  
                   l1023 01C7                     l1015 019A                     l1025 01CD  
                   l1017 019F                     l1027 01D2                     l1019 01A3  
                   _ADIF 0066                     ?_isr 0070                     _T0IF 005A  
                   i1l74 00AE                     i1l94 0289                     i1l97 0132  
                   _TMR0 0001                     _adc1 0022                     _adc2 0020  
                   _main 019A                     _tens 0028                     _unit 002A  
                   btemp 007E                     start 0012                    ??_isr 002C  
                  ?_main 0070          __end_of___awdiv 019A                    _ANSEL 0188  
        ___awdiv@divisor 0070                    i1l183 0266                    i1l336 0199  
                  i1l185 027E                    i1l901 0177                    i1l911 0190  
                  i1l903 017D                    i1l913 0195                    i1l905 017E  
                  i1l921 00E3                    i1l907 0185                    i1l923 00FB  
                  i1l909 018B                    i1l861 025C                    i1l925 0110  
                  i1l917 00BB                    i1l863 0260                    i1l927 0128  
                  i1l919 00CC                    i1l881 013F                    i1l873 0133  
                  i1l865 026D                    i1l929 027F                    i1l891 0154  
                  i1l883 0143                    i1l875 0134                    i1l867 0274  
                  i1l859 025A                    i1l893 0157                    i1l885 0148  
                  i1l877 0138                    i1l869 027A                    i1l981 003B  
                  i1l895 015E                    i1l887 014C                    i1l879 013D  
                  i1l991 005C                    i1l983 0044                    i1l897 0162  
                  i1l889 014E                    i1l993 0067                    i1l985 0047  
                  i1l899 0166                    i1l995 006A                    i1l987 0058  
                  i1l979 0037                    i1l997 007B                    i1l989 005A  
                  i1l999 007D          ___awdiv@counter 0075                    u20_25 026E  
                  u21_20 027A                    u21_21 0279                    u30_20 018B  
                  u22_20 0138                    u30_21 018A                    u22_21 0137  
                  u31_20 0190                    u23_20 0143                    u31_21 018F  
                  u23_21 0142                    u24_20 0154                    u32_20 003B  
                  u24_21 0153                    u32_21 003A                    u40_27 0085  
                  u25_25 0158                    u41_27 00A8                    u26_20 0166  
                  u18_20 0260                    u26_21 0165                    u18_21 025F  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  u27_25 0167                    u19_25 0267                    u28_20 0177  
                  u28_21 0176                    u28_25 0173                    u29_25 017F  
                  u39_27 0062                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _pTens 007D                    _pUnit 0037  
                  _table 027F                    _setup 01E9                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0015  
           __end_of_main 01E9                   ??_main 0034                   ?_table 0070  
                 _ADRESH 001E                   _ADRESL 009E         ___awdiv@dividend 0072  
                 ?_setup 0070                   _ANSELH 0189                   i1l1001 007F  
                 i1l1011 00A2                   i1l1003 008A                   i1l1013 00AD  
                 i1l1005 008D                   i1l1007 009E                   i1l1009 00A0  
                 ___wmul 025A                ??___awdiv 0074         ___awdiv@quotient 0077  
           __pdataCOMMON 007D                   saved_w 007E  __end_of__initialization 0033  
         __pcstackCOMMON 0070             __pidataBANK0 028A            __end_of_table 028A  
          __end_of_setup 0234           _OPTION_REGbits 0081                  ??_table 0072  
                ??_setup 0032               __pbssBANK0 0020               __pmaintext 019A  
                ?___wmul 0070               __pintentry 0004               __stringtab 0234  
      __end_of_getDigits 0133                  ___awdiv 0133                _ANSELbits 0188  
                __ptext1 01E9                  __ptext2 0037                  __ptext3 027F  
                __ptext4 00BB                  __ptext5 025A                  __ptext6 0133  
          _table_display 023A     end_of_initialization 0033                _TRISAbits 0085  
         __end_of___wmul 027F            __pidataCOMMON 028C      start_initialization 0015  
            __end_of_isr 00BB                 ??___wmul 0074              __pdataBANK0 0036  
             table@digit 0070                ___latbits 0002            __pcstackBANK0 002C  
          getDigits@num2 007B                _pHundreds 0036                _getDigits 00BB  
               ?___awdiv 0070                __pstrings 0234        interrupt_function 0004  
         ___wmul@product 0074               ?_getDigits 0079               _ADCON0bits 001F  
            __stringbase 0239               _ADCON1bits 009F        ___wmul@multiplier 0070  
          _value_display 0024       __end_of__stringtab 023A             getDigits@num 0079  
               _hundreds 0026              ??_getDigits 007B               _INTCONbits 000B  
               intlevel1 0000                stringcode 0234               _OSCCONbits 008F  
  __end_of_table_display 025A                 stringdir 0234                 stringtab 0234  
