

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Mar 24 16:31:08 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     0081                     	;# 
    94     0085                     	;# 
    95     0086                     	;# 
    96     0087                     	;# 
    97     0088                     	;# 
    98     0089                     	;# 
    99     008C                     	;# 
   100     008D                     	;# 
   101     008E                     	;# 
   102     008F                     	;# 
   103     0090                     	;# 
   104     0091                     	;# 
   105     0092                     	;# 
   106     0093                     	;# 
   107     0093                     	;# 
   108     0093                     	;# 
   109     0094                     	;# 
   110     0095                     	;# 
   111     0096                     	;# 
   112     0097                     	;# 
   113     0098                     	;# 
   114     0099                     	;# 
   115     009A                     	;# 
   116     009B                     	;# 
   117     009C                     	;# 
   118     009D                     	;# 
   119     009E                     	;# 
   120     009F                     	;# 
   121     0105                     	;# 
   122     0107                     	;# 
   123     0108                     	;# 
   124     0109                     	;# 
   125     010C                     	;# 
   126     010C                     	;# 
   127     010D                     	;# 
   128     010E                     	;# 
   129     010F                     	;# 
   130     0185                     	;# 
   131     0187                     	;# 
   132     0188                     	;# 
   133     0189                     	;# 
   134     018C                     	;# 
   135     018D                     	;# 
   136     0000                     	;# 
   137     0001                     	;# 
   138     0002                     	;# 
   139     0003                     	;# 
   140     0004                     	;# 
   141     0005                     	;# 
   142     0006                     	;# 
   143     0007                     	;# 
   144     0008                     	;# 
   145     0009                     	;# 
   146     000A                     	;# 
   147     000B                     	;# 
   148     000C                     	;# 
   149     000D                     	;# 
   150     000E                     	;# 
   151     000E                     	;# 
   152     000F                     	;# 
   153     0010                     	;# 
   154     0011                     	;# 
   155     0012                     	;# 
   156     0013                     	;# 
   157     0014                     	;# 
   158     0015                     	;# 
   159     0015                     	;# 
   160     0016                     	;# 
   161     0017                     	;# 
   162     0018                     	;# 
   163     0019                     	;# 
   164     001A                     	;# 
   165     001B                     	;# 
   166     001B                     	;# 
   167     001C                     	;# 
   168     001D                     	;# 
   169     001E                     	;# 
   170     001F                     	;# 
   171     0081                     	;# 
   172     0085                     	;# 
   173     0086                     	;# 
   174     0087                     	;# 
   175     0088                     	;# 
   176     0089                     	;# 
   177     008C                     	;# 
   178     008D                     	;# 
   179     008E                     	;# 
   180     008F                     	;# 
   181     0090                     	;# 
   182     0091                     	;# 
   183     0092                     	;# 
   184     0093                     	;# 
   185     0093                     	;# 
   186     0093                     	;# 
   187     0094                     	;# 
   188     0095                     	;# 
   189     0096                     	;# 
   190     0097                     	;# 
   191     0098                     	;# 
   192     0099                     	;# 
   193     009A                     	;# 
   194     009B                     	;# 
   195     009C                     	;# 
   196     009D                     	;# 
   197     009E                     	;# 
   198     009F                     	;# 
   199     0105                     	;# 
   200     0107                     	;# 
   201     0108                     	;# 
   202     0109                     	;# 
   203     010C                     	;# 
   204     010C                     	;# 
   205     010D                     	;# 
   206     010E                     	;# 
   207     010F                     	;# 
   208     0185                     	;# 
   209     0187                     	;# 
   210     0188                     	;# 
   211     0189                     	;# 
   212     018C                     	;# 
   213     018D                     	;# 
   214                           
   215                           	psect	idataCOMMON
   216     028D                     __pidataCOMMON:
   217                           
   218                           ;initializer for _pHundreds
   219     028D  3426               	retlw	low (_hundreds| 0)
   220                           
   221                           ;initializer for _pTens
   222     028E  3428               	retlw	low (_tens| 0)
   223                           
   224                           ;initializer for _pUnit
   225     028F  342A               	retlw	low (_unit| 0)
   226                           
   227                           	psect	strings
   228     0237                     __pstrings:
   229     0237                     stringtab:
   230     0237                     __stringtab:
   231     0237                     stringcode:	
   232                           ;	String table - string pointers are 1 byte each
   233                           
   234     0237                     stringdir:
   235     0237  3002               	movlw	high stringdir
   236     0238  008A               	movwf	10
   237     0239  0804               	movf	4,w
   238     023A  0A84               	incf	4,f
   239     023B  0782               	addwf	2,f
   240     023C                     __stringbase:
   241     023C  3400               	retlw	0
   242     023D                     __end_of__stringtab:
   243     023D                     _table_display:
   244     023D  3440               	retlw	64
   245     023E  3400               	retlw	0
   246     023F  3479               	retlw	121
   247     0240  3400               	retlw	0
   248     0241  3424               	retlw	36
   249     0242  3400               	retlw	0
   250     0243  3430               	retlw	48
   251     0244  3400               	retlw	0
   252     0245  3419               	retlw	25
   253     0246  3400               	retlw	0
   254     0247  3412               	retlw	18
   255     0248  3400               	retlw	0
   256     0249  3402               	retlw	2
   257     024A  3400               	retlw	0
   258     024B  3478               	retlw	120
   259     024C  3400               	retlw	0
   260     024D  3400               	retlw	0
   261     024E  3400               	retlw	0
   262     024F  3410               	retlw	16
   263     0250  3400               	retlw	0
   264     0251  3408               	retlw	8
   265     0252  3400               	retlw	0
   266     0253  3403               	retlw	3
   267     0254  3400               	retlw	0
   268     0255  3446               	retlw	70
   269     0256  3400               	retlw	0
   270     0257  3421               	retlw	33
   271     0258  3400               	retlw	0
   272     0259  3406               	retlw	6
   273     025A  3400               	retlw	0
   274     025B  340E               	retlw	14
   275     025C  3400               	retlw	0
   276     025D                     __end_of_table_display:
   277     000B                     _INTCONbits	set	11
   278     0001                     _TMR0	set	1
   279     0007                     _PORTC	set	7
   280     001E                     _ADRESH	set	30
   281     001F                     _ADCON0bits	set	31
   282     0008                     _PORTD	set	8
   283     0006                     _PORTB	set	6
   284     0066                     _ADIF	set	102
   285     005A                     _T0IF	set	90
   286     009F                     _ADCON1bits	set	159
   287     0085                     _TRISAbits	set	133
   288     0081                     _OPTION_REGbits	set	129
   289     008F                     _OSCCONbits	set	143
   290     0088                     _TRISD	set	136
   291     0087                     _TRISC	set	135
   292     0086                     _TRISB	set	134
   293     009E                     _ADRESL	set	158
   294     0188                     _ANSELbits	set	392
   295     0189                     _ANSELH	set	393
   296     0188                     _ANSEL	set	392
   297                           
   298                           	psect	cinit
   299     0015                     start_initialization:	
   300                           ; #config settings
   301                           
   302     0015                     __initialization:
   303                           
   304                           ; Initialize objects allocated to COMMON
   305     0015  120A  118A  228D  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   306     001A  00FB               	movwf	__pdataCOMMON& (0+127)
   307     001B  120A  118A  228E  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   308     0020  00FC               	movwf	(__pdataCOMMON+1)& (0+127)
   309     0021  120A  118A  228F  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   310     0026  00FD               	movwf	(__pdataCOMMON+2)& (0+127)
   311                           
   312                           ; Clear objects allocated to BANK0
   313     0027  01A0               	clrf	__pbssBANK0& (0+127)
   314     0028  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   315     0029  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   316     002A  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   317     002B  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   318     002C  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   319     002D  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   320     002E  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   321     002F  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   322     0030  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   323     0031  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   324     0032  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   325     0033                     end_of_initialization:	
   326                           ;End of C runtime variable initialization code
   327                           
   328     0033                     __end_of__initialization:
   329     0033  0183               	clrf	3
   330     0034  120A  118A  2991   	ljmp	_main	;jump to C main() function
   331                           
   332                           	psect	dataCOMMON
   333     007B                     __pdataCOMMON:
   334     007B                     _pHundreds:
   335     007B                     	ds	1
   336     007C                     _pTens:
   337     007C                     	ds	1
   338     007D                     _pUnit:
   339     007D                     	ds	1
   340                           
   341                           	psect	bssBANK0
   342     0020                     __pbssBANK0:
   343     0020                     _adc2:
   344     0020                     	ds	2
   345     0022                     _adc1:
   346     0022                     	ds	2
   347     0024                     _value_display:
   348     0024                     	ds	2
   349     0026                     _hundreds:
   350     0026                     	ds	2
   351     0028                     _tens:
   352     0028                     	ds	2
   353     002A                     _unit:
   354     002A                     	ds	2
   355                           
   356                           	psect	cstackCOMMON
   357     0070                     __pcstackCOMMON:
   358     0070                     ?_table:
   359     0070                     ?_setup:	
   360                           ; 1 bytes @ 0x0
   361                           
   362     0070                     ?_isr:	
   363                           ; 1 bytes @ 0x0
   364                           
   365     0070                     ?_main:	
   366                           ; 1 bytes @ 0x0
   367                           
   368     0070                     ?___wmul:	
   369                           ; 1 bytes @ 0x0
   370                           
   371     0070                     ?___awdiv:	
   372                           ; 2 bytes @ 0x0
   373                           
   374     0070                     table@digit:	
   375                           ; 2 bytes @ 0x0
   376                           
   377     0070                     ___wmul@multiplier:	
   378                           ; 2 bytes @ 0x0
   379                           
   380     0070                     ___awdiv@divisor:	
   381                           ; 2 bytes @ 0x0
   382                           
   383                           
   384                           ; 2 bytes @ 0x0
   385     0070                     	ds	2
   386     0072                     ??_table:
   387     0072                     ___wmul@multiplicand:	
   388                           ; 1 bytes @ 0x2
   389                           
   390     0072                     ___awdiv@dividend:	
   391                           ; 2 bytes @ 0x2
   392                           
   393                           
   394                           ; 2 bytes @ 0x2
   395     0072                     	ds	2
   396     0074                     ??___wmul:
   397     0074                     ??___awdiv:	
   398                           ; 1 bytes @ 0x4
   399                           
   400     0074                     ___wmul@product:	
   401                           ; 1 bytes @ 0x4
   402                           
   403                           
   404                           ; 2 bytes @ 0x4
   405     0074                     	ds	1
   406     0075                     ___awdiv@counter:
   407                           
   408                           ; 1 bytes @ 0x5
   409     0075                     	ds	1
   410     0076                     ___awdiv@sign:
   411                           
   412                           ; 1 bytes @ 0x6
   413     0076                     	ds	1
   414     0077                     ___awdiv@quotient:
   415                           
   416                           ; 2 bytes @ 0x7
   417     0077                     	ds	2
   418     0079                     ?_getDigits:
   419     0079                     getDigits@num:	
   420                           ; 1 bytes @ 0x9
   421                           
   422                           
   423                           ; 2 bytes @ 0x9
   424     0079                     	ds	2
   425     007B                     ??_getDigits:
   426                           
   427                           	psect	cstackBANK0
   428     002C                     __pcstackBANK0:	
   429                           ; 1 bytes @ 0xB
   430                           
   431     002C                     ??_isr:
   432                           
   433                           ; 1 bytes @ 0x0
   434     002C                     	ds	7
   435     0033                     ??_setup:
   436                           
   437                           ; 1 bytes @ 0x7
   438     0033                     	ds	2
   439     0035                     ??_main:
   440                           
   441                           ; 1 bytes @ 0x9
   442     0035                     	ds	2
   443                           
   444                           	psect	maintext
   445     0191                     __pmaintext:	
   446 ;;
   447 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   448 ;;
   449 ;; *************** function _main *****************
   450 ;; Defined at:
   451 ;;		line 84 in file "main.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, status,2, status,0, pclath, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : B00/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   465 ;;      Params:         0       0       0       0       0
   466 ;;      Locals:         0       0       0       0       0
   467 ;;      Temps:          0       2       0       0       0
   468 ;;      Totals:         0       2       0       0       0
   469 ;;Total ram usage:        2 bytes
   470 ;; Hardware stack levels required when called: 4
   471 ;; This function calls:
   472 ;;		_setup
   473 ;; This function is called by:
   474 ;;		Startup code after reset
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478     0191                     _main:	
   479                           ;psect for function _main
   480                           
   481     0191                     l999:	
   482                           ;incstack = 0
   483                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   484                           
   485                           
   486                           ;main.c: 86:     setup();
   487     0191  120A  118A  21EC  120A  118A  	fcall	_setup
   488     0196                     l1001:
   489                           
   490                           ;main.c: 90:     ADCON0bits.CHS = 0;
   491     0196  30C3               	movlw	-61
   492     0197  1283               	bcf	3,5	;RP0=0, select bank0
   493     0198  1303               	bcf	3,6	;RP1=0, select bank0
   494     0199  059F               	andwf	31,f	;volatile
   495     019A                     l1003:
   496                           
   497                           ;main.c: 91:     ADCON0bits.GO = 1;
   498     019A  149F               	bsf	31,1	;volatile
   499     019B                     l80:	
   500                           ;main.c: 92:     while(ADCON0bits.GO);
   501                           
   502     019B  189F               	btfsc	31,1	;volatile
   503     019C  299E               	goto	u331
   504     019D  299F               	goto	u330
   505     019E                     u331:
   506     019E  299B               	goto	l80
   507     019F                     u330:
   508     019F                     l1005:
   509                           
   510                           ;main.c: 93:     adc1 = (ADRESH << 8) | ADRESL;
   511     019F  081E               	movf	30,w	;volatile
   512     01A0  00A3               	movwf	_adc1+1
   513     01A1  1683               	bsf	3,5	;RP0=1, select bank1
   514     01A2  1303               	bcf	3,6	;RP1=0, select bank1
   515     01A3  081E               	movf	30,w	;volatile
   516     01A4  1283               	bcf	3,5	;RP0=0, select bank0
   517     01A5  1303               	bcf	3,6	;RP1=0, select bank0
   518     01A6  00A2               	movwf	_adc1
   519                           
   520                           ;main.c: 94:     PORTC = (char)(adc1 >> 2);
   521     01A7  0823               	movf	_adc1+1,w
   522     01A8  00B6               	movwf	??_main+1
   523     01A9  0822               	movf	_adc1,w
   524     01AA  00B5               	movwf	??_main
   525     01AB  0D36               	rlf	??_main+1,w
   526     01AC  0CB6               	rrf	??_main+1,f
   527     01AD  0CB5               	rrf	??_main,f
   528     01AE  0D36               	rlf	??_main+1,w
   529     01AF  0CB6               	rrf	??_main+1,f
   530     01B0  0CB5               	rrf	??_main,f
   531     01B1  0835               	movf	??_main,w
   532     01B2  0087               	movwf	7	;volatile
   533                           
   534                           ;main.c: 95:     _delay((unsigned long)((10)*(8000000/4000.0)));
   535     01B3  301A               	movlw	26
   536     01B4  1283               	bcf	3,5	;RP0=0, select bank0
   537     01B5  1303               	bcf	3,6	;RP1=0, select bank0
   538     01B6  00B6               	movwf	??_main+1
   539     01B7  30F7               	movlw	247
   540     01B8  00B5               	movwf	??_main
   541     01B9                     u357:
   542     01B9  0BB5               	decfsz	??_main,f
   543     01BA  29B9               	goto	u357
   544     01BB  0BB6               	decfsz	??_main+1,f
   545     01BC  29B9               	goto	u357
   546     01BD  29BE               	nop2
   547     01BE                     l1007:
   548                           
   549                           ;main.c: 98:     ADCON0bits.CHS = 4;
   550     01BE  1283               	bcf	3,5	;RP0=0, select bank0
   551     01BF  1303               	bcf	3,6	;RP1=0, select bank0
   552     01C0  081F               	movf	31,w	;volatile
   553     01C1  39C3               	andlw	-61
   554     01C2  3810               	iorlw	16
   555     01C3  009F               	movwf	31	;volatile
   556     01C4                     l1009:
   557                           
   558                           ;main.c: 99:     ADCON0bits.GO = 1;
   559     01C4  149F               	bsf	31,1	;volatile
   560     01C5                     l83:	
   561                           ;main.c: 100:     while(ADCON0bits.GO);
   562                           
   563     01C5  189F               	btfsc	31,1	;volatile
   564     01C6  29C8               	goto	u341
   565     01C7  29C9               	goto	u340
   566     01C8                     u341:
   567     01C8  29C5               	goto	l83
   568     01C9                     u340:
   569     01C9                     l1011:
   570                           
   571                           ;main.c: 101:     adc2 = (ADRESH << 8) | ADRESL;
   572     01C9  081E               	movf	30,w	;volatile
   573     01CA  00A1               	movwf	_adc2+1
   574     01CB  1683               	bsf	3,5	;RP0=1, select bank1
   575     01CC  1303               	bcf	3,6	;RP1=0, select bank1
   576     01CD  081E               	movf	30,w	;volatile
   577     01CE  1283               	bcf	3,5	;RP0=0, select bank0
   578     01CF  1303               	bcf	3,6	;RP1=0, select bank0
   579     01D0  00A0               	movwf	_adc2
   580                           
   581                           ;main.c: 102:     PORTD = (char)(adc2 >> 2);
   582     01D1  0821               	movf	_adc2+1,w
   583     01D2  00B6               	movwf	??_main+1
   584     01D3  0820               	movf	_adc2,w
   585     01D4  00B5               	movwf	??_main
   586     01D5  0D36               	rlf	??_main+1,w
   587     01D6  0CB6               	rrf	??_main+1,f
   588     01D7  0CB5               	rrf	??_main,f
   589     01D8  0D36               	rlf	??_main+1,w
   590     01D9  0CB6               	rrf	??_main+1,f
   591     01DA  0CB5               	rrf	??_main,f
   592     01DB  0835               	movf	??_main,w
   593     01DC  0088               	movwf	8	;volatile
   594                           
   595                           ;main.c: 103:     _delay((unsigned long)((10)*(8000000/4000.0)));
   596     01DD  301A               	movlw	26
   597     01DE  1283               	bcf	3,5	;RP0=0, select bank0
   598     01DF  1303               	bcf	3,6	;RP1=0, select bank0
   599     01E0  00B6               	movwf	??_main+1
   600     01E1  30F7               	movlw	247
   601     01E2  00B5               	movwf	??_main
   602     01E3                     u367:
   603     01E3  0BB5               	decfsz	??_main,f
   604     01E4  29E3               	goto	u367
   605     01E5  0BB6               	decfsz	??_main+1,f
   606     01E6  29E3               	goto	u367
   607     01E7  29E8               	nop2
   608     01E8  2996               	goto	l1001
   609     01E9  120A  118A  2812   	ljmp	start
   610     01EC                     __end_of_main:
   611                           
   612                           	psect	text1
   613     01EC                     __ptext1:	
   614 ;; *************** function _setup *****************
   615 ;; Defined at:
   616 ;;		line 109 in file "main.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, status,2, status,0
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   630 ;;      Params:         0       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0
   632 ;;      Temps:          0       2       0       0       0
   633 ;;      Totals:         0       2       0       0       0
   634 ;;Total ram usage:        2 bytes
   635 ;; Hardware stack levels used: 1
   636 ;; Hardware stack levels required when called: 3
   637 ;; This function calls:
   638 ;;		Nothing
   639 ;; This function is called by:
   640 ;;		_main
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644     01EC                     _setup:	
   645                           ;psect for function _setup
   646                           
   647     01EC                     l917:	
   648                           ;incstack = 0
   649                           ; Regs used in _setup: [wreg+status,2+status,0]
   650                           
   651                           
   652                           ;main.c: 111:     ANSEL = 0;
   653     01EC  1683               	bsf	3,5	;RP0=1, select bank3
   654     01ED  1703               	bsf	3,6	;RP1=1, select bank3
   655     01EE  0188               	clrf	8	;volatile
   656                           
   657                           ;main.c: 112:     ANSELH = 0;
   658     01EF  0189               	clrf	9	;volatile
   659                           
   660                           ;main.c: 113:     TRISB = 0;
   661     01F0  1683               	bsf	3,5	;RP0=1, select bank1
   662     01F1  1303               	bcf	3,6	;RP1=0, select bank1
   663     01F2  0186               	clrf	6	;volatile
   664                           
   665                           ;main.c: 114:     TRISC = 0;
   666     01F3  0187               	clrf	7	;volatile
   667                           
   668                           ;main.c: 115:     TRISD = 0;
   669     01F4  0188               	clrf	8	;volatile
   670     01F5                     l919:
   671                           
   672                           ;main.c: 118:     OSCCONbits.IRCF = 0b111;
   673     01F5  3070               	movlw	112
   674     01F6  048F               	iorwf	15,f	;volatile
   675     01F7                     l921:
   676                           
   677                           ;main.c: 119:     OSCCONbits.SCS = 1;
   678     01F7  140F               	bsf	15,0	;volatile
   679     01F8                     l923:
   680                           
   681                           ;main.c: 122:     OPTION_REGbits.T0CS = 0;
   682     01F8  1281               	bcf	1,5	;volatile
   683     01F9                     l925:
   684                           
   685                           ;main.c: 123:     OPTION_REGbits.PSA = 0;
   686     01F9  1181               	bcf	1,3	;volatile
   687     01FA                     l927:
   688                           
   689                           ;main.c: 124:     OPTION_REGbits.PS = 0b111;
   690     01FA  3007               	movlw	7
   691     01FB  0481               	iorwf	1,f	;volatile
   692     01FC                     l929:
   693                           
   694                           ;main.c: 125:     TMR0 = 200;
   695     01FC  30C8               	movlw	200
   696     01FD  1283               	bcf	3,5	;RP0=0, select bank0
   697     01FE  1303               	bcf	3,6	;RP1=0, select bank0
   698     01FF  0081               	movwf	1	;volatile
   699     0200                     l931:
   700                           
   701                           ;main.c: 128:     INTCONbits.T0IF = 0;
   702     0200  110B               	bcf	11,2	;volatile
   703     0201                     l933:
   704                           
   705                           ;main.c: 129:     INTCONbits.T0IE = 1;
   706     0201  168B               	bsf	11,5	;volatile
   707     0202                     l935:
   708                           
   709                           ;main.c: 130:     INTCONbits.GIE = 1;
   710     0202  178B               	bsf	11,7	;volatile
   711     0203                     l937:
   712                           
   713                           ;main.c: 133:     TRISAbits.TRISA0 = 1;
   714     0203  1683               	bsf	3,5	;RP0=1, select bank1
   715     0204  1303               	bcf	3,6	;RP1=0, select bank1
   716     0205  1405               	bsf	5,0	;volatile
   717     0206                     l939:
   718                           
   719                           ;main.c: 134:     ANSELbits.ANS0 = 1;
   720     0206  1683               	bsf	3,5	;RP0=1, select bank3
   721     0207  1703               	bsf	3,6	;RP1=1, select bank3
   722     0208  1408               	bsf	8,0	;volatile
   723     0209                     l941:
   724                           
   725                           ;main.c: 135:     ADCON0bits.CHS = 0;
   726     0209  30C3               	movlw	-61
   727     020A  1283               	bcf	3,5	;RP0=0, select bank0
   728     020B  1303               	bcf	3,6	;RP1=0, select bank0
   729     020C  059F               	andwf	31,f	;volatile
   730     020D                     l943:
   731                           
   732                           ;main.c: 136:     _delay((unsigned long)((1)*(8000000/4000.0)));
   733     020D  3003               	movlw	3
   734     020E  1283               	bcf	3,5	;RP0=0, select bank0
   735     020F  1303               	bcf	3,6	;RP1=0, select bank0
   736     0210  00B4               	movwf	??_setup+1
   737     0211  3097               	movlw	151
   738     0212  00B3               	movwf	??_setup
   739     0213                     u377:
   740     0213  0BB3               	decfsz	??_setup,f
   741     0214  2A13               	goto	u377
   742     0215  0BB4               	decfsz	??_setup+1,f
   743     0216  2A13               	goto	u377
   744     0217                     l945:
   745                           
   746                           ;main.c: 137:     TRISAbits.TRISA5 = 1;
   747     0217  1683               	bsf	3,5	;RP0=1, select bank1
   748     0218  1303               	bcf	3,6	;RP1=0, select bank1
   749     0219  1685               	bsf	5,5	;volatile
   750     021A                     l947:
   751                           
   752                           ;main.c: 138:     ANSELbits.ANS4 = 1;
   753     021A  1683               	bsf	3,5	;RP0=1, select bank3
   754     021B  1703               	bsf	3,6	;RP1=1, select bank3
   755     021C  1608               	bsf	8,4	;volatile
   756     021D                     l949:
   757                           
   758                           ;main.c: 139:     ADCON0bits.CHS = 4;
   759     021D  1283               	bcf	3,5	;RP0=0, select bank0
   760     021E  1303               	bcf	3,6	;RP1=0, select bank0
   761     021F  081F               	movf	31,w	;volatile
   762     0220  39C3               	andlw	-61
   763     0221  3810               	iorlw	16
   764     0222  009F               	movwf	31	;volatile
   765     0223                     l951:
   766                           
   767                           ;main.c: 140:     _delay((unsigned long)((1)*(8000000/4000.0)));
   768     0223  3003               	movlw	3
   769     0224  1283               	bcf	3,5	;RP0=0, select bank0
   770     0225  1303               	bcf	3,6	;RP1=0, select bank0
   771     0226  00B4               	movwf	??_setup+1
   772     0227  3097               	movlw	151
   773     0228  00B3               	movwf	??_setup
   774     0229                     u387:
   775     0229  0BB3               	decfsz	??_setup,f
   776     022A  2A29               	goto	u387
   777     022B  0BB4               	decfsz	??_setup+1,f
   778     022C  2A29               	goto	u387
   779     022D                     l953:
   780                           
   781                           ;main.c: 141:     ADCON1bits.ADFM = 1;
   782     022D  1683               	bsf	3,5	;RP0=1, select bank1
   783     022E  1303               	bcf	3,6	;RP1=0, select bank1
   784     022F  179F               	bsf	31,7	;volatile
   785     0230                     l955:
   786                           
   787                           ;main.c: 142:     ADCON1bits.VCFG0 = 0;
   788     0230  121F               	bcf	31,4	;volatile
   789     0231                     l957:
   790                           
   791                           ;main.c: 143:     ADCON1bits.VCFG1 = 1;
   792     0231  169F               	bsf	31,5	;volatile
   793     0232                     l959:
   794                           
   795                           ;main.c: 144:     ADCON0bits.ADON = 1;
   796     0232  1283               	bcf	3,5	;RP0=0, select bank0
   797     0233  1303               	bcf	3,6	;RP1=0, select bank0
   798     0234  141F               	bsf	31,0	;volatile
   799     0235                     l961:
   800                           
   801                           ;main.c: 145:     ADIF = 0;
   802     0235  130C               	bcf	12,6	;volatile
   803     0236                     l91:
   804     0236  0008               	return
   805     0237                     __end_of_setup:
   806                           
   807                           	psect	text2
   808     0037                     __ptext2:	
   809 ;; *************** function _isr *****************
   810 ;; Defined at:
   811 ;;		line 61 in file "main.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   825 ;;      Params:         0       0       0       0       0
   826 ;;      Locals:         0       0       0       0       0
   827 ;;      Temps:          0       7       0       0       0
   828 ;;      Totals:         0       7       0       0       0
   829 ;;Total ram usage:        7 bytes
   830 ;; Hardware stack levels used: 1
   831 ;; Hardware stack levels required when called: 2
   832 ;; This function calls:
   833 ;;		_getDigits
   834 ;;		_table
   835 ;; This function is called by:
   836 ;;		Interrupt level 1
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840     0037                     _isr:	
   841                           ;psect for function _isr
   842                           
   843     0037                     i1l963:
   844                           
   845                           ;main.c: 62:     if (T0IF) {
   846     0037  1D0B               	btfss	11,2	;volatile
   847     0038  283A               	goto	u32_21
   848     0039  283B               	goto	u32_20
   849     003A                     u32_21:
   850     003A  28BA               	goto	i1l74
   851     003B                     u32_20:
   852     003B                     i1l965:
   853                           
   854                           ;main.c: 63:     getDigits(adc2);
   855     003B  0821               	movf	_adc2+1,w
   856     003C  00FA               	movwf	getDigits@num+1
   857     003D  0820               	movf	_adc2,w
   858     003E  00F9               	movwf	getDigits@num
   859     003F  120A  118A  212E  120A  118A  	fcall	_getDigits
   860     0044                     i1l967:
   861                           
   862                           ;main.c: 64:     PORTB = 0b000;
   863     0044  1283               	bcf	3,5	;RP0=0, select bank0
   864     0045  1303               	bcf	3,6	;RP1=0, select bank0
   865     0046  0186               	clrf	6	;volatile
   866     0047                     i1l969:
   867                           
   868                           ;main.c: 65:     value_display = table(hundreds);
   869     0047  0827               	movf	_hundreds+1,w
   870     0048  00F1               	movwf	table@digit+1
   871     0049  0826               	movf	_hundreds,w
   872     004A  00F0               	movwf	table@digit
   873     004B  120A  118A  2282  120A  118A  	fcall	_table
   874     0050  1283               	bcf	3,5	;RP0=0, select bank0
   875     0051  1303               	bcf	3,6	;RP1=0, select bank0
   876     0052  00AC               	movwf	??_isr
   877     0053  01AD               	clrf	??_isr+1
   878     0054  082C               	movf	??_isr,w
   879     0055  00A4               	movwf	_value_display
   880     0056  082D               	movf	??_isr+1,w
   881     0057  00A5               	movwf	_value_display+1
   882     0058                     i1l971:
   883                           
   884                           ;main.c: 66:     PORTD = value_display;
   885     0058  0824               	movf	_value_display,w
   886     0059  0088               	movwf	8	;volatile
   887     005A                     i1l973:
   888                           
   889                           ;main.c: 67:     PORTB = 0b100;
   890     005A  3004               	movlw	4
   891     005B  0086               	movwf	6	;volatile
   892     005C                     i1l975:
   893                           
   894                           ;main.c: 68:     _delay((unsigned long)((100)*(8000000/4000.0)));
   895     005C  3002               	movlw	2
   896     005D  1283               	bcf	3,5	;RP0=0, select bank0
   897     005E  1303               	bcf	3,6	;RP1=0, select bank0
   898     005F  00AE               	movwf	??_isr+2
   899     0060  3004               	movlw	4
   900     0061  00AD               	movwf	??_isr+1
   901     0062  30B9               	movlw	185
   902     0063  00AC               	movwf	??_isr
   903     0064                     u39_27:
   904     0064  0BAC               	decfsz	??_isr,f
   905     0065  2864               	goto	u39_27
   906     0066  0BAD               	decfsz	??_isr+1,f
   907     0067  2864               	goto	u39_27
   908     0068  0BAE               	decfsz	??_isr+2,f
   909     0069  2864               	goto	u39_27
   910     006A  286B               	nop2
   911     006B                     i1l977:
   912                           
   913                           ;main.c: 69:     PORTB = 0b000;
   914     006B  1283               	bcf	3,5	;RP0=0, select bank0
   915     006C  1303               	bcf	3,6	;RP1=0, select bank0
   916     006D  0186               	clrf	6	;volatile
   917     006E                     i1l979:
   918                           
   919                           ;main.c: 70:     value_display = table(tens);
   920     006E  0829               	movf	_tens+1,w
   921     006F  00F1               	movwf	table@digit+1
   922     0070  0828               	movf	_tens,w
   923     0071  00F0               	movwf	table@digit
   924     0072  120A  118A  2282  120A  118A  	fcall	_table
   925     0077  1283               	bcf	3,5	;RP0=0, select bank0
   926     0078  1303               	bcf	3,6	;RP1=0, select bank0
   927     0079  00AC               	movwf	??_isr
   928     007A  01AD               	clrf	??_isr+1
   929     007B  082C               	movf	??_isr,w
   930     007C  00A4               	movwf	_value_display
   931     007D  082D               	movf	??_isr+1,w
   932     007E  00A5               	movwf	_value_display+1
   933     007F                     i1l981:
   934                           
   935                           ;main.c: 71:     PORTD = value_display;
   936     007F  0824               	movf	_value_display,w
   937     0080  0088               	movwf	8	;volatile
   938     0081                     i1l983:
   939                           
   940                           ;main.c: 72:     PORTB = 0b010;
   941     0081  3002               	movlw	2
   942     0082  0086               	movwf	6	;volatile
   943     0083                     i1l985:
   944                           
   945                           ;main.c: 73:     _delay((unsigned long)((100)*(8000000/4000.0)));
   946     0083  3002               	movlw	2
   947     0084  1283               	bcf	3,5	;RP0=0, select bank0
   948     0085  1303               	bcf	3,6	;RP1=0, select bank0
   949     0086  00AE               	movwf	??_isr+2
   950     0087  3004               	movlw	4
   951     0088  00AD               	movwf	??_isr+1
   952     0089  30B9               	movlw	185
   953     008A  00AC               	movwf	??_isr
   954     008B                     u40_27:
   955     008B  0BAC               	decfsz	??_isr,f
   956     008C  288B               	goto	u40_27
   957     008D  0BAD               	decfsz	??_isr+1,f
   958     008E  288B               	goto	u40_27
   959     008F  0BAE               	decfsz	??_isr+2,f
   960     0090  288B               	goto	u40_27
   961     0091  2892               	nop2
   962     0092                     i1l987:
   963                           
   964                           ;main.c: 74:     PORTB = 0b000;
   965     0092  1283               	bcf	3,5	;RP0=0, select bank0
   966     0093  1303               	bcf	3,6	;RP1=0, select bank0
   967     0094  0186               	clrf	6	;volatile
   968     0095                     i1l989:
   969                           
   970                           ;main.c: 75:     value_display = table(unit);
   971     0095  082B               	movf	_unit+1,w
   972     0096  00F1               	movwf	table@digit+1
   973     0097  082A               	movf	_unit,w
   974     0098  00F0               	movwf	table@digit
   975     0099  120A  118A  2282  120A  118A  	fcall	_table
   976     009E  1283               	bcf	3,5	;RP0=0, select bank0
   977     009F  1303               	bcf	3,6	;RP1=0, select bank0
   978     00A0  00AC               	movwf	??_isr
   979     00A1  01AD               	clrf	??_isr+1
   980     00A2  082C               	movf	??_isr,w
   981     00A3  00A4               	movwf	_value_display
   982     00A4  082D               	movf	??_isr+1,w
   983     00A5  00A5               	movwf	_value_display+1
   984     00A6                     i1l991:
   985                           
   986                           ;main.c: 76:     PORTD = value_display;
   987     00A6  0824               	movf	_value_display,w
   988     00A7  0088               	movwf	8	;volatile
   989     00A8                     i1l993:
   990                           
   991                           ;main.c: 77:     PORTB = 0b001;
   992     00A8  3001               	movlw	1
   993     00A9  0086               	movwf	6	;volatile
   994     00AA                     i1l995:
   995                           
   996                           ;main.c: 78:     _delay((unsigned long)((100)*(8000000/4000.0)));
   997     00AA  3002               	movlw	2
   998     00AB  1283               	bcf	3,5	;RP0=0, select bank0
   999     00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1000     00AD  00AE               	movwf	??_isr+2
  1001     00AE  3004               	movlw	4
  1002     00AF  00AD               	movwf	??_isr+1
  1003     00B0  30B9               	movlw	185
  1004     00B1  00AC               	movwf	??_isr
  1005     00B2                     u41_27:
  1006     00B2  0BAC               	decfsz	??_isr,f
  1007     00B3  28B2               	goto	u41_27
  1008     00B4  0BAD               	decfsz	??_isr+1,f
  1009     00B5  28B2               	goto	u41_27
  1010     00B6  0BAE               	decfsz	??_isr+2,f
  1011     00B7  28B2               	goto	u41_27
  1012     00B8  28B9               	nop2
  1013     00B9                     i1l997:
  1014                           
  1015                           ;main.c: 80:  T0IF = 0;
  1016     00B9  110B               	bcf	11,2	;volatile
  1017     00BA                     i1l74:
  1018     00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1019     00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1020     00BC  0832               	movf	??_isr+6,w
  1021     00BD  00FF               	movwf	btemp+1
  1022     00BE  0831               	movf	??_isr+5,w
  1023     00BF  008A               	movwf	10
  1024     00C0  0830               	movf	??_isr+4,w
  1025     00C1  0084               	movwf	4
  1026     00C2  0E2F               	swapf	??_isr+3,w
  1027     00C3  0083               	movwf	3
  1028     00C4  0EFE               	swapf	btemp,f
  1029     00C5  0E7E               	swapf	btemp,w
  1030     00C6  0009               	retfie
  1031     00C7                     __end_of_isr:
  1032                           
  1033                           	psect	intentry
  1034     0004                     __pintentry:	
  1035                           ;incstack = 0
  1036                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1037                           
  1038     0004                     interrupt_function:
  1039     007E                     saved_w	set	btemp
  1040     0004  00FE               	movwf	btemp
  1041     0005  0E03               	swapf	3,w
  1042     0006  1283               	bcf	3,5	;RP0=0, select bank0
  1043     0007  1303               	bcf	3,6	;RP1=0, select bank0
  1044     0008  00AF               	movwf	??_isr+3
  1045     0009  0804               	movf	4,w
  1046     000A  00B0               	movwf	??_isr+4
  1047     000B  080A               	movf	10,w
  1048     000C  00B1               	movwf	??_isr+5
  1049     000D  087F               	movf	btemp+1,w
  1050     000E  00B2               	movwf	??_isr+6
  1051     000F  120A  118A  2837   	ljmp	_isr
  1052                           
  1053                           	psect	text3
  1054     0282                     __ptext3:	
  1055 ;; *************** function _table *****************
  1056 ;; Defined at:
  1057 ;;		line 148 in file "main.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;  digit           2    0[COMMON] int 
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;		None
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      unsigned char 
  1064 ;; Registers used:
  1065 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1071 ;;      Params:         2       0       0       0       0
  1072 ;;      Locals:         0       0       0       0       0
  1073 ;;      Temps:          1       0       0       0       0
  1074 ;;      Totals:         3       0       0       0       0
  1075 ;;Total ram usage:        3 bytes
  1076 ;; Hardware stack levels used: 2
  1077 ;; This function calls:
  1078 ;;		Nothing
  1079 ;; This function is called by:
  1080 ;;		_isr
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084     0282                     _table:	
  1085                           ;psect for function _table
  1086                           
  1087     0282                     i1l913:	
  1088                           ;incstack = 0
  1089                           ; Regs used in _table: [wreg-fsr0h+status,2+status,0+pclath]
  1090                           
  1091                           
  1092                           ;main.c: 149:     return table_display[digit];
  1093     0282  0870               	movf	table@digit,w
  1094     0283  00F2               	movwf	??_table
  1095     0284  0772               	addwf	??_table,w
  1096     0285  3E01               	addlw	low ((_table_display-__stringbase)| (0+32768))
  1097     0286  0084               	movwf	4
  1098     0287  120A  118A  2237  120A  118A  	fcall	stringdir
  1099     028C                     i1l94:
  1100     028C  0008               	return
  1101     028D                     __end_of_table:
  1102                           
  1103                           	psect	text4
  1104     012E                     __ptext4:	
  1105 ;; *************** function _getDigits *****************
  1106 ;; Defined at:
  1107 ;;		line 152 in file "main.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;  num             2    9[COMMON] int 
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;		None
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1121 ;;      Params:         2       0       0       0       0
  1122 ;;      Locals:         0       0       0       0       0
  1123 ;;      Temps:          0       0       0       0       0
  1124 ;;      Totals:         2       0       0       0       0
  1125 ;;Total ram usage:        2 bytes
  1126 ;; Hardware stack levels used: 1
  1127 ;; Hardware stack levels required when called: 1
  1128 ;; This function calls:
  1129 ;;		___awdiv
  1130 ;;		___wmul
  1131 ;; This function is called by:
  1132 ;;		_isr
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136     012E                     _getDigits:	
  1137                           ;psect for function _getDigits
  1138                           
  1139     012E                     i1l909:	
  1140                           ;incstack = 0
  1141                           ; Regs used in _getDigits: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1142                           
  1143                           
  1144                           ;main.c: 153:     *pHundreds = num / 100;
  1145     012E  3064               	movlw	100
  1146     012F  00F0               	movwf	___awdiv@divisor
  1147     0130  3000               	movlw	0
  1148     0131  00F1               	movwf	___awdiv@divisor+1
  1149     0132  087A               	movf	getDigits@num+1,w
  1150     0133  00F3               	movwf	___awdiv@dividend+1
  1151     0134  0879               	movf	getDigits@num,w
  1152     0135  00F2               	movwf	___awdiv@dividend
  1153     0136  120A  118A  20C7  120A  118A  	fcall	___awdiv
  1154     013B  087B               	movf	_pHundreds,w
  1155     013C  0084               	movwf	4
  1156     013D  0870               	movf	?___awdiv,w
  1157     013E  1383               	bcf	3,7	;select IRP bank0
  1158     013F  0080               	movwf	0
  1159     0140  0A84               	incf	4,f
  1160     0141  0871               	movf	?___awdiv+1,w
  1161     0142  0080               	movwf	0
  1162                           
  1163                           ;main.c: 154:     num = num - (*pHundreds)*100;
  1164     0143  087B               	movf	_pHundreds,w
  1165     0144  0084               	movwf	4
  1166     0145  0800               	movf	0,w
  1167     0146  00F0               	movwf	___wmul@multiplier
  1168     0147  0A84               	incf	4,f
  1169     0148  0800               	movf	0,w
  1170     0149  00F1               	movwf	___wmul@multiplier+1
  1171     014A  309C               	movlw	156
  1172     014B  00F2               	movwf	___wmul@multiplicand
  1173     014C  30FF               	movlw	255
  1174     014D  00F3               	movwf	___wmul@multiplicand+1
  1175     014E  120A  118A  225D  120A  118A  	fcall	___wmul
  1176     0153  0879               	movf	getDigits@num,w
  1177     0154  0770               	addwf	?___wmul,w
  1178     0155  00F9               	movwf	getDigits@num
  1179     0156  087A               	movf	getDigits@num+1,w
  1180     0157  1803               	skipnc
  1181     0158  0A7A               	incf	getDigits@num+1,w
  1182     0159  0771               	addwf	?___wmul+1,w
  1183     015A  00FA               	movwf	getDigits@num+1
  1184                           
  1185                           ;main.c: 155:     *pTens = num / 10;
  1186     015B  300A               	movlw	10
  1187     015C  00F0               	movwf	___awdiv@divisor
  1188     015D  3000               	movlw	0
  1189     015E  00F1               	movwf	___awdiv@divisor+1
  1190     015F  087A               	movf	getDigits@num+1,w
  1191     0160  00F3               	movwf	___awdiv@dividend+1
  1192     0161  0879               	movf	getDigits@num,w
  1193     0162  00F2               	movwf	___awdiv@dividend
  1194     0163  120A  118A  20C7  120A  118A  	fcall	___awdiv
  1195     0168  087C               	movf	_pTens,w
  1196     0169  0084               	movwf	4
  1197     016A  0870               	movf	?___awdiv,w
  1198     016B  1383               	bcf	3,7	;select IRP bank0
  1199     016C  0080               	movwf	0
  1200     016D  0A84               	incf	4,f
  1201     016E  0871               	movf	?___awdiv+1,w
  1202     016F  0080               	movwf	0
  1203                           
  1204                           ;main.c: 156:     num = num - (*pTens)*100;
  1205     0170  087C               	movf	_pTens,w
  1206     0171  0084               	movwf	4
  1207     0172  0800               	movf	0,w
  1208     0173  00F0               	movwf	___wmul@multiplier
  1209     0174  0A84               	incf	4,f
  1210     0175  0800               	movf	0,w
  1211     0176  00F1               	movwf	___wmul@multiplier+1
  1212     0177  309C               	movlw	156
  1213     0178  00F2               	movwf	___wmul@multiplicand
  1214     0179  30FF               	movlw	255
  1215     017A  00F3               	movwf	___wmul@multiplicand+1
  1216     017B  120A  118A  225D  120A  118A  	fcall	___wmul
  1217     0180  0879               	movf	getDigits@num,w
  1218     0181  0770               	addwf	?___wmul,w
  1219     0182  00F9               	movwf	getDigits@num
  1220     0183  087A               	movf	getDigits@num+1,w
  1221     0184  1803               	skipnc
  1222     0185  0A7A               	incf	getDigits@num+1,w
  1223     0186  0771               	addwf	?___wmul+1,w
  1224     0187  00FA               	movwf	getDigits@num+1
  1225     0188                     i1l911:
  1226                           
  1227                           ;main.c: 157:     *pUnit = num;
  1228     0188  087D               	movf	_pUnit,w
  1229     0189  0084               	movwf	4
  1230     018A  0879               	movf	getDigits@num,w
  1231     018B  1383               	bcf	3,7	;select IRP bank0
  1232     018C  0080               	movwf	0
  1233     018D  0A84               	incf	4,f
  1234     018E  087A               	movf	getDigits@num+1,w
  1235     018F  0080               	movwf	0
  1236     0190                     i1l97:
  1237     0190  0008               	return
  1238     0191                     __end_of_getDigits:
  1239                           
  1240                           	psect	text5
  1241     025D                     __ptext5:	
  1242 ;; *************** function ___wmul *****************
  1243 ;; Defined at:
  1244 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;  multiplier      2    0[COMMON] unsigned int 
  1247 ;;  multiplicand    2    2[COMMON] unsigned int 
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  product         2    4[COMMON] unsigned int 
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  2    0[COMMON] unsigned int 
  1252 ;; Registers used:
  1253 ;;		wreg, status,2, status,0
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1259 ;;      Params:         4       0       0       0       0
  1260 ;;      Locals:         2       0       0       0       0
  1261 ;;      Temps:          0       0       0       0       0
  1262 ;;      Totals:         6       0       0       0       0
  1263 ;;Total ram usage:        6 bytes
  1264 ;; Hardware stack levels used: 1
  1265 ;; This function calls:
  1266 ;;		Nothing
  1267 ;; This function is called by:
  1268 ;;		_getDigits
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272     025D                     ___wmul:	
  1273                           ;psect for function ___wmul
  1274                           
  1275     025D                     i1l851:	
  1276                           ;incstack = 0
  1277                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1278                           
  1279     025D  01F4               	clrf	___wmul@product
  1280     025E  01F5               	clrf	___wmul@product+1
  1281     025F                     i1l853:
  1282     025F  1C70               	btfss	___wmul@multiplier,0
  1283     0260  2A62               	goto	u18_21
  1284     0261  2A63               	goto	u18_20
  1285     0262                     u18_21:
  1286     0262  2A69               	goto	i1l183
  1287     0263                     u18_20:
  1288     0263                     i1l855:
  1289     0263  0872               	movf	___wmul@multiplicand,w
  1290     0264  07F4               	addwf	___wmul@product,f
  1291     0265  1803               	skipnc
  1292     0266  0AF5               	incf	___wmul@product+1,f
  1293     0267  0873               	movf	___wmul@multiplicand+1,w
  1294     0268  07F5               	addwf	___wmul@product+1,f
  1295     0269                     i1l183:
  1296     0269  3001               	movlw	1
  1297     026A                     u19_25:
  1298     026A  1003               	clrc
  1299     026B  0DF2               	rlf	___wmul@multiplicand,f
  1300     026C  0DF3               	rlf	___wmul@multiplicand+1,f
  1301     026D  3EFF               	addlw	-1
  1302     026E  1D03               	skipz
  1303     026F  2A6A               	goto	u19_25
  1304     0270                     i1l857:
  1305     0270  3001               	movlw	1
  1306     0271                     u20_25:
  1307     0271  1003               	clrc
  1308     0272  0CF1               	rrf	___wmul@multiplier+1,f
  1309     0273  0CF0               	rrf	___wmul@multiplier,f
  1310     0274  3EFF               	addlw	-1
  1311     0275  1D03               	skipz
  1312     0276  2A71               	goto	u20_25
  1313     0277                     i1l859:
  1314     0277  0870               	movf	___wmul@multiplier,w
  1315     0278  0471               	iorwf	___wmul@multiplier+1,w
  1316     0279  1D03               	btfss	3,2
  1317     027A  2A7C               	goto	u21_21
  1318     027B  2A7D               	goto	u21_20
  1319     027C                     u21_21:
  1320     027C  2A5F               	goto	i1l853
  1321     027D                     u21_20:
  1322     027D                     i1l861:
  1323     027D  0875               	movf	___wmul@product+1,w
  1324     027E  00F1               	movwf	?___wmul+1
  1325     027F  0874               	movf	___wmul@product,w
  1326     0280  00F0               	movwf	?___wmul
  1327     0281                     i1l185:
  1328     0281  0008               	return
  1329     0282                     __end_of___wmul:
  1330                           
  1331                           	psect	text6
  1332     00C7                     __ptext6:	
  1333 ;; *************** function ___awdiv *****************
  1334 ;; Defined at:
  1335 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;  divisor         2    0[COMMON] int 
  1338 ;;  dividend        2    2[COMMON] int 
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;  quotient        2    7[COMMON] int 
  1341 ;;  sign            1    6[COMMON] unsigned char 
  1342 ;;  counter         1    5[COMMON] unsigned char 
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  2    0[COMMON] int 
  1345 ;; Registers used:
  1346 ;;		wreg, status,2, status,0
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1352 ;;      Params:         4       0       0       0       0
  1353 ;;      Locals:         4       0       0       0       0
  1354 ;;      Temps:          1       0       0       0       0
  1355 ;;      Totals:         9       0       0       0       0
  1356 ;;Total ram usage:        9 bytes
  1357 ;; Hardware stack levels used: 1
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		_getDigits
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365     00C7                     ___awdiv:	
  1366                           ;psect for function ___awdiv
  1367                           
  1368     00C7                     i1l865:	
  1369                           ;incstack = 0
  1370                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1371                           
  1372     00C7  01F6               	clrf	___awdiv@sign
  1373     00C8                     i1l867:
  1374     00C8  1FF1               	btfss	___awdiv@divisor+1,7
  1375     00C9  28CB               	goto	u22_21
  1376     00CA  28CC               	goto	u22_20
  1377     00CB                     u22_21:
  1378     00CB  28D3               	goto	i1l873
  1379     00CC                     u22_20:
  1380     00CC                     i1l869:
  1381     00CC  09F0               	comf	___awdiv@divisor,f
  1382     00CD  09F1               	comf	___awdiv@divisor+1,f
  1383     00CE  0AF0               	incf	___awdiv@divisor,f
  1384     00CF  1903               	skipnz
  1385     00D0  0AF1               	incf	___awdiv@divisor+1,f
  1386     00D1                     i1l871:
  1387     00D1  01F6               	clrf	___awdiv@sign
  1388     00D2  0AF6               	incf	___awdiv@sign,f
  1389     00D3                     i1l873:
  1390     00D3  1FF3               	btfss	___awdiv@dividend+1,7
  1391     00D4  28D6               	goto	u23_21
  1392     00D5  28D7               	goto	u23_20
  1393     00D6                     u23_21:
  1394     00D6  28E0               	goto	i1l879
  1395     00D7                     u23_20:
  1396     00D7                     i1l875:
  1397     00D7  09F2               	comf	___awdiv@dividend,f
  1398     00D8  09F3               	comf	___awdiv@dividend+1,f
  1399     00D9  0AF2               	incf	___awdiv@dividend,f
  1400     00DA  1903               	skipnz
  1401     00DB  0AF3               	incf	___awdiv@dividend+1,f
  1402     00DC                     i1l877:
  1403     00DC  3001               	movlw	1
  1404     00DD  00F4               	movwf	??___awdiv
  1405     00DE  0874               	movf	??___awdiv,w
  1406     00DF  06F6               	xorwf	___awdiv@sign,f
  1407     00E0                     i1l879:
  1408     00E0  01F7               	clrf	___awdiv@quotient
  1409     00E1  01F8               	clrf	___awdiv@quotient+1
  1410     00E2                     i1l881:
  1411     00E2  0870               	movf	___awdiv@divisor,w
  1412     00E3  0471               	iorwf	___awdiv@divisor+1,w
  1413     00E4  1903               	btfsc	3,2
  1414     00E5  28E7               	goto	u24_21
  1415     00E6  28E8               	goto	u24_20
  1416     00E7                     u24_21:
  1417     00E7  291F               	goto	i1l901
  1418     00E8                     u24_20:
  1419     00E8                     i1l883:
  1420     00E8  01F5               	clrf	___awdiv@counter
  1421     00E9  0AF5               	incf	___awdiv@counter,f
  1422     00EA  28F6               	goto	i1l889
  1423     00EB                     i1l885:
  1424     00EB  3001               	movlw	1
  1425     00EC                     u25_25:
  1426     00EC  1003               	clrc
  1427     00ED  0DF0               	rlf	___awdiv@divisor,f
  1428     00EE  0DF1               	rlf	___awdiv@divisor+1,f
  1429     00EF  3EFF               	addlw	-1
  1430     00F0  1D03               	skipz
  1431     00F1  28EC               	goto	u25_25
  1432     00F2                     i1l887:
  1433     00F2  3001               	movlw	1
  1434     00F3  00F4               	movwf	??___awdiv
  1435     00F4  0874               	movf	??___awdiv,w
  1436     00F5  07F5               	addwf	___awdiv@counter,f
  1437     00F6                     i1l889:
  1438     00F6  1FF1               	btfss	___awdiv@divisor+1,7
  1439     00F7  28F9               	goto	u26_21
  1440     00F8  28FA               	goto	u26_20
  1441     00F9                     u26_21:
  1442     00F9  28EB               	goto	i1l885
  1443     00FA                     u26_20:
  1444     00FA                     i1l891:
  1445     00FA  3001               	movlw	1
  1446     00FB                     u27_25:
  1447     00FB  1003               	clrc
  1448     00FC  0DF7               	rlf	___awdiv@quotient,f
  1449     00FD  0DF8               	rlf	___awdiv@quotient+1,f
  1450     00FE  3EFF               	addlw	-1
  1451     00FF  1D03               	skipz
  1452     0100  28FB               	goto	u27_25
  1453     0101  0871               	movf	___awdiv@divisor+1,w
  1454     0102  0273               	subwf	___awdiv@dividend+1,w
  1455     0103  1D03               	skipz
  1456     0104  2907               	goto	u28_25
  1457     0105  0870               	movf	___awdiv@divisor,w
  1458     0106  0272               	subwf	___awdiv@dividend,w
  1459     0107                     u28_25:
  1460     0107  1C03               	skipc
  1461     0108  290A               	goto	u28_21
  1462     0109  290B               	goto	u28_20
  1463     010A                     u28_21:
  1464     010A  2912               	goto	i1l897
  1465     010B                     u28_20:
  1466     010B                     i1l893:
  1467     010B  0870               	movf	___awdiv@divisor,w
  1468     010C  02F2               	subwf	___awdiv@dividend,f
  1469     010D  0871               	movf	___awdiv@divisor+1,w
  1470     010E  1C03               	skipc
  1471     010F  03F3               	decf	___awdiv@dividend+1,f
  1472     0110  02F3               	subwf	___awdiv@dividend+1,f
  1473     0111                     i1l895:
  1474     0111  1477               	bsf	___awdiv@quotient,0
  1475     0112                     i1l897:
  1476     0112  3001               	movlw	1
  1477     0113                     u29_25:
  1478     0113  1003               	clrc
  1479     0114  0CF1               	rrf	___awdiv@divisor+1,f
  1480     0115  0CF0               	rrf	___awdiv@divisor,f
  1481     0116  3EFF               	addlw	-1
  1482     0117  1D03               	skipz
  1483     0118  2913               	goto	u29_25
  1484     0119                     i1l899:
  1485     0119  3001               	movlw	1
  1486     011A  02F5               	subwf	___awdiv@counter,f
  1487     011B  1D03               	btfss	3,2
  1488     011C  291E               	goto	u30_21
  1489     011D  291F               	goto	u30_20
  1490     011E                     u30_21:
  1491     011E  28FA               	goto	i1l891
  1492     011F                     u30_20:
  1493     011F                     i1l901:
  1494     011F  0876               	movf	___awdiv@sign,w
  1495     0120  1903               	btfsc	3,2
  1496     0121  2923               	goto	u31_21
  1497     0122  2924               	goto	u31_20
  1498     0123                     u31_21:
  1499     0123  2929               	goto	i1l905
  1500     0124                     u31_20:
  1501     0124                     i1l903:
  1502     0124  09F7               	comf	___awdiv@quotient,f
  1503     0125  09F8               	comf	___awdiv@quotient+1,f
  1504     0126  0AF7               	incf	___awdiv@quotient,f
  1505     0127  1903               	skipnz
  1506     0128  0AF8               	incf	___awdiv@quotient+1,f
  1507     0129                     i1l905:
  1508     0129  0878               	movf	___awdiv@quotient+1,w
  1509     012A  00F1               	movwf	?___awdiv+1
  1510     012B  0877               	movf	___awdiv@quotient,w
  1511     012C  00F0               	movwf	?___awdiv
  1512     012D                     i1l336:
  1513     012D  0008               	return
  1514     012E                     __end_of___awdiv:
  1515     007E                     btemp	set	126	;btemp
  1516     007E                     wtemp0	set	126
  1517                           
  1518                           	psect	idloc
  1519                           
  1520                           ;Config register IDLOC0 @ 0x2000
  1521                           ;	unspecified, using default values
  1522     2000                     	org	8192
  1523     2000  3FFF               	dw	16383
  1524                           
  1525                           ;Config register IDLOC1 @ 0x2001
  1526                           ;	unspecified, using default values
  1527     2001                     	org	8193
  1528     2001  3FFF               	dw	16383
  1529                           
  1530                           ;Config register IDLOC2 @ 0x2002
  1531                           ;	unspecified, using default values
  1532     2002                     	org	8194
  1533     2002  3FFF               	dw	16383
  1534                           
  1535                           ;Config register IDLOC3 @ 0x2003
  1536                           ;	unspecified, using default values
  1537     2003                     	org	8195
  1538     2003  3FFF               	dw	16383
  1539                           
  1540                           	psect	config
  1541                           
  1542                           ;Config register CONFIG1 @ 0x2007
  1543                           ;	Oscillator Selection bits
  1544                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1545                           ;	Watchdog Timer Enable bit
  1546                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1547                           ;	Power-up Timer Enable bit
  1548                           ;	PWRTE = OFF, PWRT disabled
  1549                           ;	RE3/MCLR pin function select bit
  1550                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1551                           ;	Code Protection bit
  1552                           ;	CP = OFF, Program memory code protection is disabled
  1553                           ;	Data Code Protection bit
  1554                           ;	CPD = OFF, Data memory code protection is disabled
  1555                           ;	Brown Out Reset Selection bits
  1556                           ;	BOREN = OFF, BOR disabled
  1557                           ;	Internal External Switchover bit
  1558                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1559                           ;	Fail-Safe Clock Monitor Enabled bit
  1560                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1561                           ;	Low Voltage Programming Enable bit
  1562                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1563                           ;	In-Circuit Debugger Mode bit
  1564                           ;	DEBUG = 0x1, unprogramme  1565     2007                     	org	8199
  1566     2007  20D4               	dw	8404
  1567                           
  1568                           ;Config register CONFIG2 @ 0x2008
  1569                           ;	Brown-out Reset Selection bit
  1570                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1571                           ;	Flash Program Memory Self Write Enable bits
  1572                           ;	WRT = OFF, Write protection off
  1573     2008                     	org	8200
  1574     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    32
    Data        3
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     11      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    pHundreds	PTR int  size(1) Largest target is 2
		 -> hundreds(BANK0[2]), 

    pTens	PTR int  size(1) Largest target is 2
		 -> tens(BANK0[2]), 

    pUnit	PTR int  size(1) Largest target is 2
		 -> unit(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_getDigits
    _getDigits->___awdiv

Critical Paths under _main in BANK0

    _main->_setup

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              9 BANK0      2     2      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0       0
                                              7 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  7     7      0    1438
                                              0 BANK0      7     7      0
                          _getDigits
                              _table
 ---------------------------------------------------------------------------------
 (4) _table                                                3     1      2     250
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (3) _getDigits                                            2     0      2    1188
                                              9 COMMON     2     0      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)
   _getDigits
     ___awdiv
     ___wmul
   _table

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      17       5       28.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      25      12        0.0%
ABS                  0      0      25       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Mar 24 16:31:08 2023

                      pc 0002                       l80 019B                       l91 0236  
                     l83 01C5             ___awdiv@sign 0076                       fsr 0004  
    ___wmul@multiplicand 0072                      l921 01F7                      l931 0200  
                    l923 01F8                      l941 0209                      l933 0201  
                    l925 01F9                      l917 01EC                      l951 0223  
                    l943 020D                      l935 0202                      l927 01FA  
                    l919 01F5                      l961 0235                      l953 022D  
                    l945 0217                      l937 0203                      l929 01FC  
                    l955 0230                      l947 021A                      l939 0206  
                    l957 0231                      l949 021D                      l959 0232  
                    l999 0191                      u330 019F                      u331 019E  
                    u340 01C9                      u341 01C8                      u357 01B9  
                    u367 01E3                      u377 0213                      u387 0229  
                    _isr 0037                      fsr0 0004                      indf 0000  
                   l1001 0196                     l1011 01C9                     l1003 019A  
                   l1005 019F                     l1007 01BE                     l1009 01C4  
                   _ADIF 0066                     ?_isr 0070                     _T0IF 005A  
                   i1l74 00BA                     i1l94 028C                     i1l97 0190  
                   _TMR0 0001                     _adc1 0022                     _adc2 0020  
                   _main 0191                     _tens 0028                     _unit 002A  
                   btemp 007E                     start 0012                    ??_isr 002C  
                  ?_main 0070          __end_of___awdiv 012E                    _ANSEL 0188  
        ___awdiv@divisor 0070                    i1l183 0269                    i1l336 012D  
                  i1l185 0281                    i1l901 011F                    i1l903 0124  
                  i1l911 0188                    i1l905 0129                    i1l913 0282  
                  i1l851 025D                    i1l861 027D                    i1l853 025F  
                  i1l909 012E                    i1l871 00D1                    i1l855 0263  
                  i1l881 00E2                    i1l873 00D3                    i1l865 00C7  
                  i1l857 0270                    i1l891 00FA                    i1l883 00E8  
                  i1l875 00D7                    i1l867 00C8                    i1l859 0277  
                  i1l971 0058                    i1l963 0037                    i1l893 010B  
                  i1l885 00EB                    i1l877 00DC                    i1l869 00CC  
                  i1l981 007F                    i1l973 005A                    i1l965 003B  
                  i1l895 0111                    i1l887 00F2                    i1l879 00E0  
                  i1l991 00A6                    i1l983 0081                    i1l975 005C  
                  i1l967 0044                    i1l897 0112                    i1l889 00F6  
                  i1l993 00A8                    i1l985 0083                    i1l977 006B  
                  i1l969 0047                    i1l899 0119                    i1l995 00AA  
                  i1l987 0092                    i1l979 006E                    i1l997 00B9  
                  i1l989 0095          ___awdiv@counter 0075                    u20_25 0271  
                  u21_20 027D                    u21_21 027C                    u30_20 011F  
                  u22_20 00CC                    u30_21 011E                    u22_21 00CB  
                  u31_20 0124                    u23_20 00D7                    u31_21 0123  
                  u23_21 00D6                    u24_20 00E8                    u32_20 003B  
                  u24_21 00E7                    u32_21 003A                    u40_27 008B  
                  u25_25 00EC                    u41_27 00B2                    u26_20 00FA  
                  u18_20 0263                    u26_21 00F9                    u18_21 0262  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  u27_25 00FB                    u19_25 026A                    u28_20 010B  
                  u28_21 010A                    u28_25 0107                    u29_25 0113  
                  u39_27 0064                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _pTens 007C                    _pUnit 007D  
                  _table 0282                    _setup 01EC                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0015  
           __end_of_main 01EC                   ??_main 0035                   ?_table 0070  
                 _ADRESH 001E                   _ADRESL 009E         ___awdiv@dividend 0072  
                 ?_setup 0070                   _ANSELH 0189                   ___wmul 025D  
              ??___awdiv 0074         ___awdiv@quotient 0077             __pdataCOMMON 007B  
                 saved_w 007E  __end_of__initialization 0033           __pcstackCOMMON 0070  
          __end_of_table 028D            __end_of_setup 0237           _OPTION_REGbits 0081  
                ??_table 0072                  ??_setup 0033               __pbssBANK0 0020  
             __pmaintext 0191                  ?___wmul 0070               __pintentry 0004  
             __stringtab 0237        __end_of_getDigits 0191                  ___awdiv 00C7  
              _ANSELbits 0188                  __ptext1 01EC                  __ptext2 0037  
                __ptext3 0282                  __ptext4 012E                  __ptext5 025D  
                __ptext6 00C7            _table_display 023D     end_of_initialization 0033  
              _TRISAbits 0085           __end_of___wmul 0282            __pidataCOMMON 028D  
    start_initialization 0015              __end_of_isr 00C7                 ??___wmul 0074  
             table@digit 0070                ___latbits 0002            __pcstackBANK0 002C  
              _pHundreds 007B                _getDigits 012E                 ?___awdiv 0070  
              __pstrings 0237        interrupt_function 0004           ___wmul@product 0074  
             ?_getDigits 0079               _ADCON0bits 001F              __stringbase 023C  
             _ADCON1bits 009F        ___wmul@multiplier 0070            _value_display 0024  
     __end_of__stringtab 023D             getDigits@num 0079                 _hundreds 0026  
            ??_getDigits 007B               _INTCONbits 000B                 intlevel1 0000  
              stringcode 0237               _OSCCONbits 008F    __end_of_table_display 025D  
               stringdir 0237                 stringtab 0237  
